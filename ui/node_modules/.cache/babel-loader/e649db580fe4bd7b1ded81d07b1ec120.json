{"ast":null,"code":"import _classCallCheck from \"/root/Pokemon/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/root/Pokemon/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _possibleConstructorReturn from \"/root/Pokemon/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _assertThisInitialized from \"/root/Pokemon/ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/root/Pokemon/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/root/Pokemon/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { getWindow, getDocument } from 'ssr-window';\nimport { pathToRegexp, compile } from 'path-to-regexp';\nimport $ from '../../shared/dom7.js';\nimport Framework7Class from '../../shared/class.js';\nimport { extend, nextFrame, parseUrlQuery, serializeObject, now, eventNameToColonCase } from '../../shared/utils.js';\nimport History from '../../shared/history.js';\nimport SwipeBack from './swipe-back.js';\nimport { refreshPage, navigate } from './navigate.js';\nimport { tabLoad, tabRemove } from './tab.js';\nimport { modalLoad, modalRemove } from './modal.js';\nimport { back } from './back.js';\nimport { clearPreviousHistory } from './clear-previous-history.js';\nimport appRouterCheck from './app-router-check.js';\n\nvar Router = /*#__PURE__*/function (_Framework7Class) {\n  _inherits(Router, _Framework7Class);\n\n  var _super = _createSuper(Router);\n\n  function Router(app, view) {\n    var _this;\n\n    _classCallCheck(this, Router);\n\n    _this = _super.call(this, {}, [typeof view === 'undefined' ? app : view]);\n\n    var router = _assertThisInitialized(_this); // Is App Router\n\n\n    router.isAppRouter = typeof view === 'undefined';\n\n    if (router.isAppRouter) {\n      // App Router\n      extend(false, router, {\n        app: app,\n        params: app.params.view,\n        routes: app.routes || [],\n        cache: app.cache\n      });\n    } else {\n      // View Router\n      extend(false, router, {\n        app: app,\n        view: view,\n        viewId: view.id,\n        id: view.params.routerId,\n        params: view.params,\n        routes: view.routes,\n        history: view.history,\n        scrollHistory: view.scrollHistory,\n        cache: app.cache,\n        dynamicNavbar: app.theme === 'ios' && view.params.iosDynamicNavbar,\n        initialPages: [],\n        initialNavbars: []\n      });\n    } // Install Modules\n\n\n    router.useModules(); // AllowPageChage\n\n    router.allowPageChange = true; // Current Route\n\n    var currentRoute = {};\n    var previousRoute = {};\n    Object.defineProperty(router, 'currentRoute', {\n      enumerable: true,\n      configurable: true,\n      set: function set(newRoute) {\n        if (newRoute === void 0) {\n          newRoute = {};\n        }\n\n        previousRoute = extend({}, currentRoute);\n        currentRoute = newRoute;\n        if (!currentRoute) return;\n        router.url = currentRoute.url;\n        router.emit('routeChange', newRoute, previousRoute, router);\n      },\n      get: function get() {\n        return currentRoute;\n      }\n    });\n    Object.defineProperty(router, 'previousRoute', {\n      enumerable: true,\n      configurable: true,\n      get: function get() {\n        return previousRoute;\n      },\n      set: function set(newRoute) {\n        previousRoute = newRoute;\n      }\n    });\n    return _possibleConstructorReturn(_this, router);\n  }\n\n  _createClass(Router, [{\n    key: \"mount\",\n    value: function mount() {\n      var router = this;\n      var view = router.view;\n      var document = getDocument();\n      extend(false, router, {\n        tempDom: document.createElement('div'),\n        $el: view.$el,\n        el: view.el,\n        $navbarsEl: view.$navbarsEl,\n        navbarsEl: view.navbarsEl\n      });\n      router.emit('local::mount routerMount', router);\n    }\n  }, {\n    key: \"animatableNavElements\",\n    value: function animatableNavElements($newNavbarEl, $oldNavbarEl, toLarge, fromLarge, direction) {\n      var router = this;\n      var dynamicNavbar = router.dynamicNavbar;\n      var animateIcon = router.params.iosAnimateNavbarBackIcon;\n      var newNavEls;\n      var oldNavEls;\n\n      function animatableNavEl($el, $navbarInner) {\n        var isSliding = $el.hasClass('sliding') || $navbarInner.hasClass('sliding');\n        var isSubnavbar = $el.hasClass('subnavbar');\n        var needsOpacityTransition = isSliding ? !isSubnavbar : true;\n        var $iconEl = $el.find('.back .icon');\n        var isIconLabel;\n\n        if (isSliding && animateIcon && $el.hasClass('left') && $iconEl.length > 0 && $iconEl.next('span').length) {\n          $el = $iconEl.next('span'); // eslint-disable-line\n\n          isIconLabel = true;\n        }\n\n        return {\n          $el: $el,\n          isIconLabel: isIconLabel,\n          leftOffset: $el[0].f7NavbarLeftOffset,\n          rightOffset: $el[0].f7NavbarRightOffset,\n          isSliding: isSliding,\n          isSubnavbar: isSubnavbar,\n          needsOpacityTransition: needsOpacityTransition\n        };\n      }\n\n      if (dynamicNavbar) {\n        newNavEls = [];\n        oldNavEls = [];\n        $newNavbarEl.children('.navbar-inner').children('.left, .right, .title, .subnavbar').each(function (navEl) {\n          var $navEl = $(navEl);\n          if ($navEl.hasClass('left') && fromLarge && direction === 'forward') return;\n          if ($navEl.hasClass('title') && toLarge) return;\n          newNavEls.push(animatableNavEl($navEl, $newNavbarEl.children('.navbar-inner')));\n        });\n\n        if (!($oldNavbarEl.hasClass('navbar-master') && router.params.masterDetailBreakpoint > 0 && router.app.width >= router.params.masterDetailBreakpoint)) {\n          $oldNavbarEl.children('.navbar-inner').children('.left, .right, .title, .subnavbar').each(function (navEl) {\n            var $navEl = $(navEl);\n            if ($navEl.hasClass('left') && toLarge && !fromLarge && direction === 'forward') return;\n            if ($navEl.hasClass('left') && toLarge && direction === 'backward') return;\n\n            if ($navEl.hasClass('title') && fromLarge) {\n              return;\n            }\n\n            oldNavEls.push(animatableNavEl($navEl, $oldNavbarEl.children('.navbar-inner')));\n          });\n        }\n\n        [oldNavEls, newNavEls].forEach(function (navEls) {\n          navEls.forEach(function (navEl) {\n            var n = navEl;\n            var isSliding = navEl.isSliding,\n                $el = navEl.$el;\n            var otherEls = navEls === oldNavEls ? newNavEls : oldNavEls;\n            if (!(isSliding && $el.hasClass('title') && otherEls)) return;\n            otherEls.forEach(function (otherNavEl) {\n              if (otherNavEl.isIconLabel) {\n                var iconTextEl = otherNavEl.$el[0];\n                n.leftOffset += iconTextEl ? iconTextEl.offsetLeft || 0 : 0;\n              }\n            });\n          });\n        });\n      }\n\n      return {\n        newNavEls: newNavEls,\n        oldNavEls: oldNavEls\n      };\n    }\n  }, {\n    key: \"animate\",\n    value: function animate($oldPageEl, $newPageEl, $oldNavbarEl, $newNavbarEl, direction, transition, callback) {\n      var router = this;\n\n      if (router.params.animateCustom) {\n        router.params.animateCustom.apply(router, [$oldPageEl, $newPageEl, $oldNavbarEl, $newNavbarEl, direction, callback]);\n        return;\n      }\n\n      var dynamicNavbar = router.dynamicNavbar;\n      var ios = router.app.theme === 'ios';\n\n      if (transition) {\n        var routerCustomTransitionClass = \"router-transition-custom router-transition-\".concat(transition, \"-\").concat(direction); // Animate\n\n        var onCustomTransitionDone = function onCustomTransitionDone() {\n          router.$el.removeClass(routerCustomTransitionClass);\n\n          if (dynamicNavbar && router.$navbarsEl.length) {\n            if ($newNavbarEl) {\n              router.$navbarsEl.prepend($newNavbarEl);\n            }\n\n            if ($oldNavbarEl) {\n              router.$navbarsEl.prepend($oldNavbarEl);\n            }\n          }\n\n          if (callback) callback();\n        };\n\n        (direction === 'forward' ? $newPageEl : $oldPageEl).animationEnd(onCustomTransitionDone);\n\n        if (dynamicNavbar) {\n          if ($newNavbarEl && $newPageEl) {\n            router.setNavbarPosition($newNavbarEl, '');\n            $newNavbarEl.removeClass('navbar-next navbar-previous navbar-current');\n            $newPageEl.prepend($newNavbarEl);\n          }\n\n          if ($oldNavbarEl && $oldPageEl) {\n            router.setNavbarPosition($oldNavbarEl, '');\n            $oldNavbarEl.removeClass('navbar-next navbar-previous navbar-current');\n            $oldPageEl.prepend($oldNavbarEl);\n          }\n        }\n\n        router.$el.addClass(routerCustomTransitionClass);\n        return;\n      } // Router Animation class\n\n\n      var routerTransitionClass = \"router-transition-\".concat(direction, \" router-transition\");\n      var newNavEls;\n      var oldNavEls;\n      var fromLarge;\n      var toLarge;\n      var toDifferent;\n      var oldIsLarge;\n      var newIsLarge;\n\n      if (ios && dynamicNavbar) {\n        var betweenMasterAndDetail = router.params.masterDetailBreakpoint > 0 && router.app.width >= router.params.masterDetailBreakpoint && ($oldNavbarEl.hasClass('navbar-master') && $newNavbarEl.hasClass('navbar-master-detail') || $oldNavbarEl.hasClass('navbar-master-detail') && $newNavbarEl.hasClass('navbar-master'));\n\n        if (!betweenMasterAndDetail) {\n          oldIsLarge = $oldNavbarEl && $oldNavbarEl.hasClass('navbar-large');\n          newIsLarge = $newNavbarEl && $newNavbarEl.hasClass('navbar-large');\n          fromLarge = oldIsLarge && !$oldNavbarEl.hasClass('navbar-large-collapsed');\n          toLarge = newIsLarge && !$newNavbarEl.hasClass('navbar-large-collapsed');\n          toDifferent = fromLarge && !toLarge || toLarge && !fromLarge;\n        }\n\n        var navEls = router.animatableNavElements($newNavbarEl, $oldNavbarEl, toLarge, fromLarge, direction);\n        newNavEls = navEls.newNavEls;\n        oldNavEls = navEls.oldNavEls;\n      }\n\n      function animateNavbars(progress) {\n        if (!(ios && dynamicNavbar)) return;\n\n        if (progress === 1) {\n          if (toLarge) {\n            $newNavbarEl.addClass('router-navbar-transition-to-large');\n            $oldNavbarEl.addClass('router-navbar-transition-to-large');\n          }\n\n          if (fromLarge) {\n            $newNavbarEl.addClass('router-navbar-transition-from-large');\n            $oldNavbarEl.addClass('router-navbar-transition-from-large');\n          }\n        }\n\n        newNavEls.forEach(function (navEl) {\n          var $el = navEl.$el;\n          var offset = direction === 'forward' ? navEl.rightOffset : navEl.leftOffset;\n\n          if (navEl.isSliding) {\n            if (navEl.isSubnavbar && newIsLarge) {\n              // prettier-ignore\n              $el[0].style.setProperty('transform', \"translate3d(\".concat(offset * (1 - progress), \"px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)\"), 'important');\n            } else {\n              $el.transform(\"translate3d(\".concat(offset * (1 - progress), \"px,0,0)\"));\n            }\n          }\n        });\n        oldNavEls.forEach(function (navEl) {\n          var $el = navEl.$el;\n          var offset = direction === 'forward' ? navEl.leftOffset : navEl.rightOffset;\n\n          if (navEl.isSliding) {\n            if (navEl.isSubnavbar && oldIsLarge) {\n              $el.transform(\"translate3d(\".concat(offset * progress, \"px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)\"));\n            } else {\n              $el.transform(\"translate3d(\".concat(offset * progress, \"px,0,0)\"));\n            }\n          }\n        });\n      } // AnimationEnd Callback\n\n\n      function onDone() {\n        if (router.dynamicNavbar) {\n          if ($newNavbarEl) {\n            $newNavbarEl.removeClass('router-navbar-transition-to-large router-navbar-transition-from-large');\n            $newNavbarEl.addClass('navbar-no-title-large-transition');\n            nextFrame(function () {\n              $newNavbarEl.removeClass('navbar-no-title-large-transition');\n            });\n          }\n\n          if ($oldNavbarEl) {\n            $oldNavbarEl.removeClass('router-navbar-transition-to-large router-navbar-transition-from-large');\n          }\n\n          if ($newNavbarEl.hasClass('sliding') || $newNavbarEl.children('.navbar-inner.sliding').length) {\n            $newNavbarEl.find('.title, .left, .right, .left .icon, .subnavbar').transform('');\n          } else {\n            $newNavbarEl.find('.sliding').transform('');\n          }\n\n          if ($oldNavbarEl.hasClass('sliding') || $oldNavbarEl.children('.navbar-inner.sliding').length) {\n            $oldNavbarEl.find('.title, .left, .right, .left .icon, .subnavbar').transform('');\n          } else {\n            $oldNavbarEl.find('.sliding').transform('');\n          }\n        }\n\n        router.$el.removeClass(routerTransitionClass);\n        if (callback) callback();\n      }\n\n      (direction === 'forward' ? $newPageEl : $oldPageEl).animationEnd(function () {\n        onDone();\n      }); // Animate\n\n      if (dynamicNavbar) {\n        // Prepare Navbars\n        animateNavbars(0);\n        nextFrame(function () {\n          // Add class, start animation\n          router.$el.addClass(routerTransitionClass);\n\n          if (toDifferent) {\n            // eslint-disable-next-line\n            router.el._clientLeft = router.el.clientLeft;\n          }\n\n          animateNavbars(1);\n        });\n      } else {\n        // Add class, start animation\n        router.$el.addClass(routerTransitionClass);\n      }\n    }\n  }, {\n    key: \"removeModal\",\n    value: function removeModal(modalEl) {\n      var router = this;\n      router.removeEl(modalEl);\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"removeTabContent\",\n    value: function removeTabContent(tabEl) {\n      var $tabEl = $(tabEl);\n      $tabEl.html('');\n    }\n  }, {\n    key: \"removeNavbar\",\n    value: function removeNavbar(el) {\n      var router = this;\n      router.removeEl(el);\n    }\n  }, {\n    key: \"removePage\",\n    value: function removePage(el) {\n      var $el = $(el);\n      var f7Page = $el && $el[0] && $el[0].f7Page;\n      var router = this;\n\n      if (f7Page && f7Page.route && f7Page.route.route && f7Page.route.route.keepAlive) {\n        $el.remove();\n        return;\n      }\n\n      router.removeEl(el);\n    }\n  }, {\n    key: \"removeEl\",\n    value: function removeEl(el) {\n      if (!el) return;\n      var router = this;\n      var $el = $(el);\n      if ($el.length === 0) return;\n      $el.find('.tab').each(function (tabEl) {\n        $(tabEl).children().each(function (tabChild) {\n          if (tabChild.f7Component) {\n            $(tabChild).trigger('tab:beforeremove');\n            tabChild.f7Component.destroy();\n          }\n        });\n      });\n\n      if ($el[0].f7Component && $el[0].f7Component.destroy) {\n        $el[0].f7Component.destroy();\n      }\n\n      if (!router.params.removeElements) {\n        return;\n      }\n\n      if (router.params.removeElementsWithTimeout) {\n        setTimeout(function () {\n          $el.remove();\n        }, router.params.removeElementsTimeout);\n      } else {\n        $el.remove();\n      }\n    }\n  }, {\n    key: \"getPageEl\",\n    value: function getPageEl(content) {\n      var router = this;\n\n      if (typeof content === 'string') {\n        router.tempDom.innerHTML = content;\n      } else {\n        if ($(content).hasClass('page')) {\n          return content;\n        }\n\n        router.tempDom.innerHTML = '';\n        $(router.tempDom).append(content);\n      }\n\n      return router.findElement('.page', router.tempDom);\n    }\n  }, {\n    key: \"findElement\",\n    value: function findElement(stringSelector, container, notStacked) {\n      var router = this;\n      var view = router.view;\n      var app = router.app; // Modals Selector\n\n      var modalsSelector = '.popup, .dialog, .popover, .actions-modal, .sheet-modal, .login-screen, .page';\n      var $container = $(container);\n      var selector = stringSelector;\n      if (notStacked) selector += ':not(.stacked)';\n      var found = $container.find(selector).filter(function (el) {\n        return $(el).parents(modalsSelector).length === 0;\n      });\n\n      if (found.length > 1) {\n        if (typeof view.selector === 'string') {\n          // Search in related view\n          found = $container.find(\"\".concat(view.selector, \" \").concat(selector));\n        }\n\n        if (found.length > 1) {\n          // Search in main view\n          found = $container.find(\".\".concat(app.params.viewMainClass, \" \").concat(selector));\n        }\n      }\n\n      if (found.length === 1) return found; // Try to find not stacked\n\n      if (!notStacked) found = router.findElement(selector, $container, true);\n      if (found && found.length === 1) return found;\n      if (found && found.length > 1) return $(found[0]);\n      return undefined;\n    }\n  }, {\n    key: \"flattenRoutes\",\n    value: function flattenRoutes(routes) {\n      if (routes === void 0) {\n        routes = this.routes;\n      }\n\n      var router = this;\n      var flattenedRoutes = [];\n      routes.forEach(function (route) {\n        var hasTabRoutes = false;\n\n        if ('tabs' in route && route.tabs) {\n          var mergedPathsRoutes = route.tabs.map(function (tabRoute) {\n            var tRoute = extend({}, route, {\n              path: \"\".concat(route.path, \"/\").concat(tabRoute.path).replace('///', '/').replace('//', '/'),\n              parentPath: route.path,\n              tab: tabRoute\n            });\n            delete tRoute.tabs;\n            delete tRoute.routes;\n            return tRoute;\n          });\n          hasTabRoutes = true;\n          flattenedRoutes = flattenedRoutes.concat(router.flattenRoutes(mergedPathsRoutes));\n        }\n\n        if ('detailRoutes' in route) {\n          var _mergedPathsRoutes = route.detailRoutes.map(function (detailRoute) {\n            var dRoute = extend({}, detailRoute);\n            dRoute.masterRoute = route;\n            dRoute.masterRoutePath = route.path;\n            return dRoute;\n          });\n\n          flattenedRoutes = flattenedRoutes.concat(route, router.flattenRoutes(_mergedPathsRoutes));\n        }\n\n        if ('routes' in route) {\n          var _mergedPathsRoutes2 = route.routes.map(function (childRoute) {\n            var cRoute = extend({}, childRoute);\n            cRoute.path = \"\".concat(route.path, \"/\").concat(cRoute.path).replace('///', '/').replace('//', '/');\n            return cRoute;\n          });\n\n          if (hasTabRoutes) {\n            flattenedRoutes = flattenedRoutes.concat(router.flattenRoutes(_mergedPathsRoutes2));\n          } else {\n            flattenedRoutes = flattenedRoutes.concat(route, router.flattenRoutes(_mergedPathsRoutes2));\n          }\n        }\n\n        if (!('routes' in route) && !('tabs' in route && route.tabs) && !('detailRoutes' in route)) {\n          flattenedRoutes.push(route);\n        }\n      });\n      return flattenedRoutes;\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"parseRouteUrl\",\n    value: function parseRouteUrl(url) {\n      if (!url) return {};\n      var query = parseUrlQuery(url);\n      var hash = url.split('#')[1];\n      var params = {};\n      var path = url.split('#')[0].split('?')[0];\n      return {\n        query: query,\n        hash: hash,\n        params: params,\n        url: url,\n        path: path\n      };\n    }\n  }, {\n    key: \"generateUrl\",\n    value: function generateUrl(parameters) {\n      if (parameters === void 0) {\n        parameters = {};\n      }\n\n      if (typeof parameters === 'string') {\n        return parameters;\n      }\n\n      var _parameters = parameters,\n          name = _parameters.name,\n          path = _parameters.path,\n          params = _parameters.params,\n          query = _parameters.query;\n\n      if (!name && !path) {\n        throw new Error('Framework7: \"name\" or \"path\" parameter is required');\n      }\n\n      var router = this;\n      var route = name ? router.findRouteByKey('name', name) : router.findRouteByKey('path', path);\n\n      if (!route) {\n        if (name) {\n          throw new Error(\"Framework7: route with name \\\"\".concat(name, \"\\\" not found\"));\n        } else {\n          throw new Error(\"Framework7: route with path \\\"\".concat(path, \"\\\" not found\"));\n        }\n      }\n\n      var url = router.constructRouteUrl(route, {\n        params: params,\n        query: query\n      });\n\n      if (!url) {\n        throw new Error(\"Framework7: can't construct URL for route with name \\\"\".concat(name, \"\\\"\"));\n      }\n\n      return url;\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"constructRouteUrl\",\n    value: function constructRouteUrl(route, _temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          params = _ref.params,\n          query = _ref.query;\n\n      var path = route.path;\n      var toUrl = compile(path);\n      var url;\n\n      try {\n        url = toUrl(params || {});\n      } catch (error) {\n        throw new Error(\"Framework7: error constructing route URL from passed params:\\nRoute: \".concat(path, \"\\n\").concat(error.toString()));\n      }\n\n      if (query) {\n        if (typeof query === 'string') url += \"?\".concat(query);else if (Object.keys(query).length) url += \"?\".concat(serializeObject(query));\n      }\n\n      return url;\n    }\n  }, {\n    key: \"findTabRouteUrl\",\n    value: function findTabRouteUrl(tabEl) {\n      var router = this;\n      var $tabEl = $(tabEl);\n      var parentPath = router.currentRoute.route.parentPath;\n      var tabId = $tabEl.attr('id');\n      var flattenedRoutes = router.flattenRoutes(router.routes);\n      var foundTabRouteUrl;\n      flattenedRoutes.forEach(function (route) {\n        if (route.parentPath === parentPath && route.tab && route.tab.id === tabId) {\n          if (router.currentRoute.params && Object.keys(router.currentRoute.params).length > 0) {\n            foundTabRouteUrl = router.constructRouteUrl(route, {\n              params: router.currentRoute.params,\n              query: router.currentRoute.query\n            });\n          } else {\n            foundTabRouteUrl = route.path;\n          }\n        }\n      });\n      return foundTabRouteUrl;\n    }\n  }, {\n    key: \"findRouteByKey\",\n    value: function findRouteByKey(key, value) {\n      var router = this;\n      var routes = router.routes;\n      var flattenedRoutes = router.flattenRoutes(routes);\n      var matchingRoute;\n      flattenedRoutes.forEach(function (route) {\n        if (matchingRoute) return;\n\n        if (route[key] === value) {\n          matchingRoute = route;\n        }\n      });\n      return matchingRoute;\n    }\n  }, {\n    key: \"findMatchingRoute\",\n    value: function findMatchingRoute(url) {\n      if (!url) return undefined;\n      var router = this;\n      var routes = router.routes;\n      var flattenedRoutes = router.flattenRoutes(routes);\n\n      var _router$parseRouteUrl = router.parseRouteUrl(url),\n          path = _router$parseRouteUrl.path,\n          query = _router$parseRouteUrl.query,\n          hash = _router$parseRouteUrl.hash,\n          params = _router$parseRouteUrl.params;\n\n      var matchingRoute;\n      flattenedRoutes.forEach(function (route) {\n        if (matchingRoute) return;\n        var keys = [];\n        var pathsToMatch = [route.path];\n\n        if (route.alias) {\n          if (typeof route.alias === 'string') pathsToMatch.push(route.alias);else if (Array.isArray(route.alias)) {\n            route.alias.forEach(function (aliasPath) {\n              pathsToMatch.push(aliasPath);\n            });\n          }\n        }\n\n        var matched;\n        pathsToMatch.forEach(function (pathToMatch) {\n          if (matched) return;\n          matched = pathToRegexp(pathToMatch, keys).exec(path);\n        });\n\n        if (matched) {\n          keys.forEach(function (keyObj, index) {\n            if (typeof keyObj.name === 'number') return;\n            var paramValue = matched[index + 1];\n\n            if (typeof paramValue === 'undefined' || paramValue === null) {\n              params[keyObj.name] = paramValue;\n            } else {\n              params[keyObj.name] = decodeURIComponent(paramValue);\n            }\n          });\n          var parentPath;\n\n          if (route.parentPath) {\n            parentPath = path.split('/').slice(0, route.parentPath.split('/').length - 1).join('/');\n          }\n\n          matchingRoute = {\n            query: query,\n            hash: hash,\n            params: params,\n            url: url,\n            path: path,\n            parentPath: parentPath,\n            route: route,\n            name: route.name\n          };\n        }\n      });\n      return matchingRoute;\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"replaceRequestUrlParams\",\n    value: function replaceRequestUrlParams(url, options) {\n      if (url === void 0) {\n        url = '';\n      }\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var compiledUrl = url;\n\n      if (typeof compiledUrl === 'string' && compiledUrl.indexOf('{{') >= 0 && options && options.route && options.route.params && Object.keys(options.route.params).length) {\n        Object.keys(options.route.params).forEach(function (paramName) {\n          var regExp = new RegExp(\"{{\".concat(paramName, \"}}\"), 'g');\n          compiledUrl = compiledUrl.replace(regExp, options.route.params[paramName] || '');\n        });\n      }\n\n      return compiledUrl;\n    }\n  }, {\n    key: \"removeFromXhrCache\",\n    value: function removeFromXhrCache(url) {\n      var router = this;\n      var xhrCache = router.cache.xhr;\n      var index = false;\n\n      for (var i = 0; i < xhrCache.length; i += 1) {\n        if (xhrCache[i].url === url) index = i;\n      }\n\n      if (index !== false) xhrCache.splice(index, 1);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(requestUrl, options) {\n      var router = this;\n      var params = router.params;\n      var ignoreCache = options.ignoreCache;\n      var url = requestUrl;\n      var hasQuery = url.indexOf('?') >= 0;\n\n      if (params.passRouteQueryToRequest && options && options.route && options.route.query && Object.keys(options.route.query).length) {\n        url += \"\".concat(hasQuery ? '&' : '?').concat(serializeObject(options.route.query));\n        hasQuery = true;\n      }\n\n      if (params.passRouteParamsToRequest && options && options.route && options.route.params && Object.keys(options.route.params).length) {\n        url += \"\".concat(hasQuery ? '&' : '?').concat(serializeObject(options.route.params));\n        hasQuery = true;\n      }\n\n      if (url.indexOf('{{') >= 0) {\n        url = router.replaceRequestUrlParams(url, options);\n      } // should we ignore get params or not\n\n\n      if (params.xhrCacheIgnoreGetParameters && url.indexOf('?') >= 0) {\n        url = url.split('?')[0];\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (params.xhrCache && !ignoreCache && url.indexOf('nocache') < 0 && params.xhrCacheIgnore.indexOf(url) < 0) {\n          for (var i = 0; i < router.cache.xhr.length; i += 1) {\n            var cachedUrl = router.cache.xhr[i];\n\n            if (cachedUrl.url === url) {\n              // Check expiration\n              if (now() - cachedUrl.time < params.xhrCacheDuration) {\n                // Load from cache\n                resolve(cachedUrl.content);\n                return;\n              }\n            }\n          }\n        }\n\n        router.xhrAbortController = router.app.request.abortController();\n        router.app.request({\n          abortController: router.xhrAbortController,\n          url: url,\n          method: 'GET',\n          beforeSend: function beforeSend(xhr) {\n            router.emit('routerAjaxStart', xhr, options);\n          },\n          complete: function complete(xhr, status) {\n            router.emit('routerAjaxComplete', xhr);\n\n            if (status !== 'error' && status !== 'timeout' && xhr.status >= 200 && xhr.status < 300 || xhr.status === 0) {\n              if (params.xhrCache && xhr.responseText !== '') {\n                router.removeFromXhrCache(url);\n                router.cache.xhr.push({\n                  url: url,\n                  time: now(),\n                  content: xhr.responseText\n                });\n              }\n\n              router.emit('routerAjaxSuccess', xhr, options);\n              resolve(xhr.responseText);\n            } else {\n              router.emit('routerAjaxError', xhr, options);\n              reject(xhr);\n            }\n          },\n          error: function error(xhr) {\n            router.emit('routerAjaxError', xhr, options);\n            reject(xhr);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"setNavbarPosition\",\n    value: function setNavbarPosition($el, position, ariaHidden) {\n      var router = this;\n      $el.removeClass('navbar-previous navbar-current navbar-next');\n\n      if (position) {\n        $el.addClass(\"navbar-\".concat(position));\n      }\n\n      if (ariaHidden === false) {\n        $el.removeAttr('aria-hidden');\n      } else if (ariaHidden === true) {\n        $el.attr('aria-hidden', 'true');\n      }\n\n      $el.trigger('navbar:position', {\n        position: position\n      });\n      router.emit('navbarPosition', $el[0], position);\n    }\n  }, {\n    key: \"setPagePosition\",\n    value: function setPagePosition($el, position, ariaHidden) {\n      var router = this;\n      $el.removeClass('page-previous page-current page-next');\n      $el.addClass(\"page-\".concat(position));\n\n      if (ariaHidden === false) {\n        $el.removeAttr('aria-hidden');\n      } else if (ariaHidden === true) {\n        $el.attr('aria-hidden', 'true');\n      }\n\n      $el.trigger('page:position', {\n        position: position\n      });\n      router.emit('pagePosition', $el[0], position);\n    } // Remove theme elements\n\n  }, {\n    key: \"removeThemeElements\",\n    value: function removeThemeElements(el) {\n      var router = this;\n      var theme = router.app.theme;\n      var toRemove;\n\n      if (theme === 'ios') {\n        toRemove = '.md-only, .aurora-only, .if-md, .if-aurora, .if-not-ios, .not-ios';\n      } else if (theme === 'md') {\n        toRemove = '.ios-only, .aurora-only, .if-ios, .if-aurora, .if-not-md, .not-md';\n      } else if (theme === 'aurora') {\n        toRemove = '.ios-only, .md-only, .if-ios, .if-md, .if-not-aurora, .not-aurora';\n      }\n\n      $(el).find(toRemove).remove();\n    }\n  }, {\n    key: \"getPageData\",\n    value: function getPageData(pageEl, navbarEl, from, to, route, pageFromEl) {\n      if (route === void 0) {\n        route = {};\n      }\n\n      var router = this;\n      var $pageEl = $(pageEl).eq(0);\n      var $navbarEl = $(navbarEl).eq(0);\n      var currentPage = $pageEl[0].f7Page || {};\n      var direction;\n      var pageFrom;\n      if (from === 'next' && to === 'current' || from === 'current' && to === 'previous') direction = 'forward';\n      if (from === 'current' && to === 'next' || from === 'previous' && to === 'current') direction = 'backward';\n\n      if (currentPage && !currentPage.fromPage) {\n        var $pageFromEl = $(pageFromEl);\n\n        if ($pageFromEl.length) {\n          pageFrom = $pageFromEl[0].f7Page;\n        }\n      }\n\n      pageFrom = currentPage.pageFrom || pageFrom;\n\n      if (pageFrom && pageFrom.pageFrom) {\n        pageFrom.pageFrom = null;\n      }\n\n      var page = {\n        app: router.app,\n        view: router.view,\n        router: router,\n        $el: $pageEl,\n        el: $pageEl[0],\n        $pageEl: $pageEl,\n        pageEl: $pageEl[0],\n        $navbarEl: $navbarEl,\n        navbarEl: $navbarEl[0],\n        name: $pageEl.attr('data-name'),\n        position: from,\n        from: from,\n        to: to,\n        direction: direction,\n        route: currentPage.route ? currentPage.route : route,\n        pageFrom: pageFrom\n      };\n      $pageEl[0].f7Page = page;\n      return page;\n    } // Callbacks\n\n  }, {\n    key: \"pageCallback\",\n    value: function pageCallback(callback, pageEl, navbarEl, from, to, options, pageFromEl) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!pageEl) return;\n      var router = this;\n      var $pageEl = $(pageEl);\n      if (!$pageEl.length) return;\n      var $navbarEl = $(navbarEl);\n      var _options = options,\n          route = _options.route;\n      var restoreScrollTopOnBack = router.params.restoreScrollTopOnBack && !(router.params.masterDetailBreakpoint > 0 && $pageEl.hasClass('page-master') && router.app.width >= router.params.masterDetailBreakpoint);\n      var keepAlive = $pageEl[0].f7Page && $pageEl[0].f7Page.route && $pageEl[0].f7Page.route.route && $pageEl[0].f7Page.route.route.keepAlive;\n\n      if (callback === 'beforeRemove' && keepAlive) {\n        callback = 'beforeUnmount'; // eslint-disable-line\n      }\n\n      var camelName = \"page\".concat(callback[0].toUpperCase() + callback.slice(1, callback.length));\n      var colonName = \"page:\".concat(callback.toLowerCase());\n      var page = {};\n\n      if (callback === 'beforeRemove' && $pageEl[0].f7Page) {\n        page = extend($pageEl[0].f7Page, {\n          from: from,\n          to: to,\n          position: from\n        });\n      } else {\n        page = router.getPageData($pageEl[0], $navbarEl[0], from, to, route, pageFromEl);\n      }\n\n      page.swipeBack = !!options.swipeBack;\n\n      var _ref2 = options.route ? options.route.route : {},\n          _ref2$on = _ref2.on,\n          on = _ref2$on === void 0 ? {} : _ref2$on,\n          _ref2$once = _ref2.once,\n          once = _ref2$once === void 0 ? {} : _ref2$once;\n\n      if (options.on) {\n        extend(on, options.on);\n      }\n\n      if (options.once) {\n        extend(once, options.once);\n      }\n\n      function attachEvents() {\n        if ($pageEl[0].f7RouteEventsAttached) return;\n        $pageEl[0].f7RouteEventsAttached = true;\n\n        if (on && Object.keys(on).length > 0) {\n          $pageEl[0].f7RouteEventsOn = on;\n          Object.keys(on).forEach(function (eventName) {\n            on[eventName] = on[eventName].bind(router);\n            $pageEl.on(eventNameToColonCase(eventName), on[eventName]);\n          });\n        }\n\n        if (once && Object.keys(once).length > 0) {\n          $pageEl[0].f7RouteEventsOnce = once;\n          Object.keys(once).forEach(function (eventName) {\n            once[eventName] = once[eventName].bind(router);\n            $pageEl.once(eventNameToColonCase(eventName), once[eventName]);\n          });\n        }\n      }\n\n      function detachEvents() {\n        if (!$pageEl[0].f7RouteEventsAttached) return;\n\n        if ($pageEl[0].f7RouteEventsOn) {\n          Object.keys($pageEl[0].f7RouteEventsOn).forEach(function (eventName) {\n            $pageEl.off(eventNameToColonCase(eventName), $pageEl[0].f7RouteEventsOn[eventName]);\n          });\n        }\n\n        if ($pageEl[0].f7RouteEventsOnce) {\n          Object.keys($pageEl[0].f7RouteEventsOnce).forEach(function (eventName) {\n            $pageEl.off(eventNameToColonCase(eventName), $pageEl[0].f7RouteEventsOnce[eventName]);\n          });\n        }\n\n        $pageEl[0].f7RouteEventsAttached = null;\n        $pageEl[0].f7RouteEventsOn = null;\n        $pageEl[0].f7RouteEventsOnce = null;\n        delete $pageEl[0].f7RouteEventsAttached;\n        delete $pageEl[0].f7RouteEventsOn;\n        delete $pageEl[0].f7RouteEventsOnce;\n      }\n\n      if (callback === 'mounted') {\n        attachEvents();\n      }\n\n      if (callback === 'init') {\n        if (restoreScrollTopOnBack && (from === 'previous' || !from) && to === 'current' && router.scrollHistory[page.route.url] && !$pageEl.hasClass('no-restore-scroll')) {\n          var $pageContent = $pageEl.find('.page-content');\n\n          if ($pageContent.length > 0) {\n            // eslint-disable-next-line\n            $pageContent = $pageContent.filter(function (pageContentEl) {\n              return $(pageContentEl).parents('.tab:not(.tab-active)').length === 0 && !$(pageContentEl).is('.tab:not(.tab-active)');\n            });\n          }\n\n          $pageContent.scrollTop(router.scrollHistory[page.route.url]);\n        }\n\n        attachEvents();\n\n        if ($pageEl[0].f7PageInitialized) {\n          $pageEl.trigger('page:reinit', page);\n          router.emit('pageReinit', page);\n          return;\n        }\n\n        $pageEl[0].f7PageInitialized = true;\n      }\n\n      if (restoreScrollTopOnBack && callback === 'beforeOut' && from === 'current' && to === 'previous') {\n        // Save scroll position\n        var _$pageContent = $pageEl.find('.page-content');\n\n        if (_$pageContent.length > 0) {\n          // eslint-disable-next-line\n          _$pageContent = _$pageContent.filter(function (pageContentEl) {\n            return $(pageContentEl).parents('.tab:not(.tab-active)').length === 0 && !$(pageContentEl).is('.tab:not(.tab-active)');\n          });\n        }\n\n        router.scrollHistory[page.route.url] = _$pageContent.scrollTop();\n      }\n\n      if (restoreScrollTopOnBack && callback === 'beforeOut' && from === 'current' && to === 'next') {\n        // Delete scroll position\n        delete router.scrollHistory[page.route.url];\n      }\n\n      $pageEl.trigger(colonName, page);\n      router.emit(camelName, page);\n\n      if (callback === 'beforeRemove' || callback === 'beforeUnmount') {\n        detachEvents();\n\n        if (!keepAlive) {\n          if ($pageEl[0].f7Page && $pageEl[0].f7Page.navbarEl) {\n            delete $pageEl[0].f7Page.navbarEl.f7Page;\n          }\n\n          $pageEl[0].f7Page = null;\n        }\n      }\n    }\n  }, {\n    key: \"saveHistory\",\n    value: function saveHistory() {\n      var router = this;\n      var window = getWindow();\n      router.view.history = router.history;\n\n      if (router.params.browserHistory && router.params.browserHistoryStoreHistory && window.localStorage) {\n        window.localStorage[\"f7router-\".concat(router.view.id, \"-history\")] = JSON.stringify(router.history);\n      }\n    }\n  }, {\n    key: \"restoreHistory\",\n    value: function restoreHistory() {\n      var router = this;\n      var window = getWindow();\n\n      if (router.params.browserHistory && router.params.browserHistoryStoreHistory && window.localStorage && window.localStorage[\"f7router-\".concat(router.view.id, \"-history\")]) {\n        router.history = JSON.parse(window.localStorage[\"f7router-\".concat(router.view.id, \"-history\")]);\n        router.view.history = router.history;\n      }\n    }\n  }, {\n    key: \"clearHistory\",\n    value: function clearHistory() {\n      var router = this;\n      router.history = [];\n      if (router.view) router.view.history = [];\n      router.saveHistory();\n    }\n  }, {\n    key: \"updateCurrentUrl\",\n    value: function updateCurrentUrl(newUrl) {\n      var router = this;\n      appRouterCheck(router, 'updateCurrentUrl'); // Update history\n\n      if (router.history.length) {\n        router.history[router.history.length - 1] = newUrl;\n      } else {\n        router.history.push(newUrl);\n      } // Update current route params\n\n\n      var _router$parseRouteUrl2 = router.parseRouteUrl(newUrl),\n          query = _router$parseRouteUrl2.query,\n          hash = _router$parseRouteUrl2.hash,\n          params = _router$parseRouteUrl2.params,\n          url = _router$parseRouteUrl2.url,\n          path = _router$parseRouteUrl2.path;\n\n      if (router.currentRoute) {\n        extend(router.currentRoute, {\n          query: query,\n          hash: hash,\n          params: params,\n          url: url,\n          path: path\n        });\n      }\n\n      if (router.params.browserHistory) {\n        var browserHistoryRoot = router.params.browserHistoryRoot || '';\n        History.replace(router.view.id, {\n          url: newUrl\n        }, browserHistoryRoot + router.params.browserHistorySeparator + newUrl);\n      } // Save History\n\n\n      router.saveHistory();\n      router.emit('routeUrlUpdate', router.currentRoute, router);\n    }\n  }, {\n    key: \"getInitialUrl\",\n    value: function getInitialUrl() {\n      var router = this;\n\n      if (router.initialUrl) {\n        return {\n          initialUrl: router.initialUrl,\n          historyRestored: router.historyRestored\n        };\n      }\n\n      var app = router.app,\n          view = router.view;\n      var document = getDocument();\n      var window = getWindow();\n      var location = app.params.url && typeof app.params.url === 'string' && typeof URL !== 'undefined' ? new URL(app.params.url) : document.location;\n      var initialUrl = router.params.url;\n      var documentUrl = location.href.split(location.origin)[1];\n      var historyRestored;\n      var _router$params = router.params,\n          browserHistory = _router$params.browserHistory,\n          browserHistoryOnLoad = _router$params.browserHistoryOnLoad,\n          browserHistorySeparator = _router$params.browserHistorySeparator;\n      var browserHistoryRoot = router.params.browserHistoryRoot;\n\n      if ((window.cordova || window.Capacitor && window.Capacitor.isNative) && browserHistory && !browserHistorySeparator && !browserHistoryRoot && location.pathname.indexOf('index.html')) {\n        // eslint-disable-next-line\n        console.warn('Framework7: wrong or not complete browserHistory configuration, trying to guess browserHistoryRoot');\n        browserHistoryRoot = location.pathname.split('index.html')[0];\n      }\n\n      if (!browserHistory || !browserHistoryOnLoad) {\n        if (!initialUrl) {\n          initialUrl = documentUrl;\n        }\n\n        if (location.search && initialUrl.indexOf('?') < 0) {\n          initialUrl += location.search;\n        }\n\n        if (location.hash && initialUrl.indexOf('#') < 0) {\n          initialUrl += location.hash;\n        }\n      } else {\n        if (browserHistoryRoot && documentUrl.indexOf(browserHistoryRoot) >= 0) {\n          documentUrl = documentUrl.split(browserHistoryRoot)[1];\n          if (documentUrl === '') documentUrl = '/';\n        }\n\n        if (browserHistorySeparator.length > 0 && documentUrl.indexOf(browserHistorySeparator) >= 0) {\n          initialUrl = documentUrl.split(browserHistorySeparator)[1];\n        } else {\n          initialUrl = documentUrl;\n        }\n\n        router.restoreHistory();\n\n        if (router.history.indexOf(initialUrl) >= 0) {\n          router.history = router.history.slice(0, router.history.indexOf(initialUrl) + 1);\n        } else if (router.params.url === initialUrl) {\n          router.history = [initialUrl];\n        } else if (History.state && History.state[view.id] && History.state[view.id].url === router.history[router.history.length - 1]) {\n          initialUrl = router.history[router.history.length - 1];\n        } else {\n          router.history = [documentUrl.split(browserHistorySeparator)[0] || '/', initialUrl];\n        }\n\n        if (router.history.length > 1) {\n          historyRestored = true;\n        } else {\n          router.history = [];\n        }\n\n        router.saveHistory();\n      }\n\n      router.initialUrl = initialUrl;\n      router.historyRestored = historyRestored;\n      return {\n        initialUrl: initialUrl,\n        historyRestored: historyRestored\n      };\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var router = this;\n      var app = router.app,\n          view = router.view;\n      var document = getDocument();\n      router.mount();\n\n      var _router$getInitialUrl = router.getInitialUrl(),\n          initialUrl = _router$getInitialUrl.initialUrl,\n          historyRestored = _router$getInitialUrl.historyRestored; // Init Swipeback\n\n\n      if (view && router.params.iosSwipeBack && app.theme === 'ios' || view && router.params.mdSwipeBack && app.theme === 'md' || view && router.params.auroraSwipeBack && app.theme === 'aurora') {\n        SwipeBack(router);\n      }\n\n      var _router$params2 = router.params,\n          browserHistory = _router$params2.browserHistory,\n          browserHistoryOnLoad = _router$params2.browserHistoryOnLoad,\n          browserHistoryAnimateOnLoad = _router$params2.browserHistoryAnimateOnLoad,\n          browserHistoryInitialMatch = _router$params2.browserHistoryInitialMatch;\n      var currentRoute;\n\n      if (router.history.length > 1) {\n        // Will load page\n        var initUrl = browserHistoryInitialMatch ? initialUrl : router.history[0];\n        currentRoute = router.findMatchingRoute(initUrl);\n\n        if (!currentRoute) {\n          currentRoute = extend(router.parseRouteUrl(initUrl), {\n            route: {\n              url: initUrl,\n              path: initUrl.split('?')[0]\n            }\n          });\n        }\n      } else {\n        // Don't load page\n        currentRoute = router.findMatchingRoute(initialUrl);\n\n        if (!currentRoute) {\n          currentRoute = extend(router.parseRouteUrl(initialUrl), {\n            route: {\n              url: initialUrl,\n              path: initialUrl.split('?')[0]\n            }\n          });\n        }\n      }\n\n      if (router.params.stackPages) {\n        router.$el.children('.page').each(function (pageEl) {\n          var $pageEl = $(pageEl);\n          router.initialPages.push($pageEl[0]);\n\n          if (router.dynamicNavbar && $pageEl.children('.navbar').length > 0) {\n            router.initialNavbars.push($pageEl.children('.navbar')[0]);\n          }\n        });\n      }\n\n      if (router.$el.children('.page:not(.stacked)').length === 0 && initialUrl && router.params.loadInitialPage) {\n        // No pages presented in DOM, reload new page\n        router.navigate(initialUrl, {\n          initial: true,\n          reloadCurrent: true,\n          browserHistory: false,\n          animate: false,\n          once: {\n            modalOpen: function modalOpen() {\n              if (!historyRestored) return;\n              var preloadPreviousPage = router.params.preloadPreviousPage || router.params[\"\".concat(app.theme, \"SwipeBack\")];\n\n              if (preloadPreviousPage && router.history.length > 1) {\n                router.back({\n                  preload: true\n                });\n              }\n            },\n            pageAfterIn: function pageAfterIn() {\n              if (!historyRestored) return;\n              var preloadPreviousPage = router.params.preloadPreviousPage || router.params[\"\".concat(app.theme, \"SwipeBack\")];\n\n              if (preloadPreviousPage && router.history.length > 1) {\n                router.back({\n                  preload: true\n                });\n              }\n            }\n          }\n        });\n      } else if (router.$el.children('.page:not(.stacked)').length) {\n        // Init current DOM page\n        var hasTabRoute;\n        router.currentRoute = currentRoute;\n        router.$el.children('.page:not(.stacked)').each(function (pageEl) {\n          var $pageEl = $(pageEl);\n          var $navbarEl;\n          router.setPagePosition($pageEl, 'current');\n\n          if (router.dynamicNavbar) {\n            $navbarEl = $pageEl.children('.navbar');\n\n            if ($navbarEl.length > 0) {\n              if (!router.$navbarsEl.parents(document).length) {\n                router.$el.prepend(router.$navbarsEl);\n              }\n\n              router.setNavbarPosition($navbarEl, 'current');\n              router.$navbarsEl.append($navbarEl);\n\n              if ($navbarEl.children('.title-large').length) {\n                $navbarEl.addClass('navbar-large');\n              }\n\n              $pageEl.children('.navbar').remove();\n            } else {\n              router.$navbarsEl.addClass('navbar-hidden');\n\n              if ($navbarEl.children('.title-large').length) {\n                router.$navbarsEl.addClass('navbar-hidden navbar-large-hidden');\n              }\n            }\n          }\n\n          if (router.currentRoute && router.currentRoute.route && (router.currentRoute.route.master === true || typeof router.currentRoute.route.master === 'function' && router.currentRoute.route.master(app, router)) && router.params.masterDetailBreakpoint > 0) {\n            $pageEl.addClass('page-master');\n            $pageEl.trigger('page:role', {\n              role: 'master'\n            });\n\n            if ($navbarEl && $navbarEl.length) {\n              $navbarEl.addClass('navbar-master');\n            }\n\n            view.checkMasterDetailBreakpoint();\n          }\n\n          var initOptions = {\n            route: router.currentRoute\n          };\n\n          if (router.currentRoute && router.currentRoute.route && router.currentRoute.route.options) {\n            extend(initOptions, router.currentRoute.route.options);\n          }\n\n          router.currentPageEl = $pageEl[0];\n\n          if (router.dynamicNavbar && $navbarEl.length) {\n            router.currentNavbarEl = $navbarEl[0];\n          }\n\n          router.removeThemeElements($pageEl);\n\n          if (router.dynamicNavbar && $navbarEl.length) {\n            router.removeThemeElements($navbarEl);\n          }\n\n          if (initOptions.route.route.tab) {\n            hasTabRoute = true;\n            router.tabLoad(initOptions.route.route.tab, extend({}, initOptions));\n          }\n\n          router.pageCallback('init', $pageEl, $navbarEl, 'current', undefined, initOptions);\n          router.pageCallback('beforeIn', $pageEl, $navbarEl, 'current', undefined, initOptions);\n          router.pageCallback('afterIn', $pageEl, $navbarEl, 'current', undefined, initOptions);\n        });\n\n        if (historyRestored) {\n          if (browserHistoryInitialMatch) {\n            var preloadPreviousPage = router.params.preloadPreviousPage || router.params[\"\".concat(app.theme, \"SwipeBack\")];\n\n            if (preloadPreviousPage && router.history.length > 1) {\n              router.back({\n                preload: true\n              });\n            }\n          } else {\n            router.navigate(initialUrl, {\n              initial: true,\n              browserHistory: false,\n              history: false,\n              animate: browserHistoryAnimateOnLoad,\n              once: {\n                pageAfterIn: function pageAfterIn() {\n                  var preloadPreviousPage = router.params.preloadPreviousPage || router.params[\"\".concat(app.theme, \"SwipeBack\")];\n\n                  if (preloadPreviousPage && router.history.length > 2) {\n                    router.back({\n                      preload: true\n                    });\n                  }\n                }\n              }\n            });\n          }\n        }\n\n        if (!historyRestored && !hasTabRoute) {\n          router.history.push(initialUrl);\n          router.saveHistory();\n        }\n      }\n\n      if (initialUrl && browserHistory && browserHistoryOnLoad && (!History.state || !History.state[view.id])) {\n        History.initViewState(view.id, {\n          url: initialUrl\n        });\n      }\n\n      router.emit('local::init routerInit', router);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var router = this;\n      router.emit('local::destroy routerDestroy', router); // Delete props & methods\n\n      Object.keys(router).forEach(function (routerProp) {\n        router[routerProp] = null;\n        delete router[routerProp];\n      });\n      router = null;\n    }\n  }]);\n\n  return Router;\n}(Framework7Class); // Load\n\n\nRouter.prototype.navigate = navigate;\nRouter.prototype.refreshPage = refreshPage; // Tab\n\nRouter.prototype.tabLoad = tabLoad;\nRouter.prototype.tabRemove = tabRemove; // Modal\n\nRouter.prototype.modalLoad = modalLoad;\nRouter.prototype.modalRemove = modalRemove; // Back\n\nRouter.prototype.back = back; // Clear history\n\nRouter.prototype.clearPreviousHistory = clearPreviousHistory;\nexport default Router;","map":{"version":3,"names":["getWindow","getDocument","pathToRegexp","compile","$","Framework7Class","extend","nextFrame","parseUrlQuery","serializeObject","now","eventNameToColonCase","History","SwipeBack","refreshPage","navigate","tabLoad","tabRemove","modalLoad","modalRemove","back","clearPreviousHistory","appRouterCheck","Router","app","view","router","isAppRouter","params","routes","cache","viewId","id","routerId","history","scrollHistory","dynamicNavbar","theme","iosDynamicNavbar","initialPages","initialNavbars","useModules","allowPageChange","currentRoute","previousRoute","Object","defineProperty","enumerable","configurable","set","newRoute","url","emit","get","document","tempDom","createElement","$el","el","$navbarsEl","navbarsEl","$newNavbarEl","$oldNavbarEl","toLarge","fromLarge","direction","animateIcon","iosAnimateNavbarBackIcon","newNavEls","oldNavEls","animatableNavEl","$navbarInner","isSliding","hasClass","isSubnavbar","needsOpacityTransition","$iconEl","find","isIconLabel","length","next","leftOffset","f7NavbarLeftOffset","rightOffset","f7NavbarRightOffset","children","each","navEl","$navEl","push","masterDetailBreakpoint","width","forEach","navEls","n","otherEls","otherNavEl","iconTextEl","offsetLeft","$oldPageEl","$newPageEl","transition","callback","animateCustom","apply","ios","routerCustomTransitionClass","onCustomTransitionDone","removeClass","prepend","animationEnd","setNavbarPosition","addClass","routerTransitionClass","toDifferent","oldIsLarge","newIsLarge","betweenMasterAndDetail","animatableNavElements","animateNavbars","progress","offset","style","setProperty","transform","onDone","_clientLeft","clientLeft","modalEl","removeEl","tabEl","$tabEl","html","f7Page","route","keepAlive","remove","tabChild","f7Component","trigger","destroy","removeElements","removeElementsWithTimeout","setTimeout","removeElementsTimeout","content","innerHTML","append","findElement","stringSelector","container","notStacked","modalsSelector","$container","selector","found","filter","parents","viewMainClass","undefined","flattenedRoutes","hasTabRoutes","tabs","mergedPathsRoutes","map","tabRoute","tRoute","path","replace","parentPath","tab","concat","flattenRoutes","detailRoutes","detailRoute","dRoute","masterRoute","masterRoutePath","childRoute","cRoute","query","hash","split","parameters","name","Error","findRouteByKey","constructRouteUrl","_temp","toUrl","error","toString","keys","tabId","attr","foundTabRouteUrl","key","value","matchingRoute","parseRouteUrl","pathsToMatch","alias","Array","isArray","aliasPath","matched","pathToMatch","exec","keyObj","index","paramValue","decodeURIComponent","slice","join","options","compiledUrl","indexOf","paramName","regExp","RegExp","xhrCache","xhr","i","splice","requestUrl","ignoreCache","hasQuery","passRouteQueryToRequest","passRouteParamsToRequest","replaceRequestUrlParams","xhrCacheIgnoreGetParameters","Promise","resolve","reject","xhrCacheIgnore","cachedUrl","time","xhrCacheDuration","xhrAbortController","request","abortController","method","beforeSend","complete","status","responseText","removeFromXhrCache","position","ariaHidden","removeAttr","toRemove","pageEl","navbarEl","from","to","pageFromEl","$pageEl","eq","$navbarEl","currentPage","pageFrom","fromPage","$pageFromEl","page","restoreScrollTopOnBack","camelName","toUpperCase","colonName","toLowerCase","getPageData","swipeBack","on","once","attachEvents","f7RouteEventsAttached","f7RouteEventsOn","eventName","bind","f7RouteEventsOnce","detachEvents","off","$pageContent","pageContentEl","is","scrollTop","f7PageInitialized","window","browserHistory","browserHistoryStoreHistory","localStorage","JSON","stringify","parse","saveHistory","newUrl","browserHistoryRoot","browserHistorySeparator","initialUrl","historyRestored","location","URL","documentUrl","href","origin","browserHistoryOnLoad","cordova","Capacitor","isNative","pathname","console","warn","search","restoreHistory","state","mount","getInitialUrl","iosSwipeBack","mdSwipeBack","auroraSwipeBack","browserHistoryAnimateOnLoad","browserHistoryInitialMatch","initUrl","findMatchingRoute","stackPages","loadInitialPage","initial","reloadCurrent","animate","modalOpen","preloadPreviousPage","preload","pageAfterIn","hasTabRoute","setPagePosition","master","role","checkMasterDetailBreakpoint","initOptions","currentPageEl","currentNavbarEl","removeThemeElements","pageCallback","initViewState","routerProp","prototype"],"sources":["/root/Pokemon/ui/node_modules/framework7/modules/router/router-class.js"],"sourcesContent":["import { getWindow, getDocument } from 'ssr-window';\nimport { pathToRegexp, compile } from 'path-to-regexp';\nimport $ from '../../shared/dom7.js';\nimport Framework7Class from '../../shared/class.js';\nimport { extend, nextFrame, parseUrlQuery, serializeObject, now, eventNameToColonCase } from '../../shared/utils.js';\nimport History from '../../shared/history.js';\nimport SwipeBack from './swipe-back.js';\nimport { refreshPage, navigate } from './navigate.js';\nimport { tabLoad, tabRemove } from './tab.js';\nimport { modalLoad, modalRemove } from './modal.js';\nimport { back } from './back.js';\nimport { clearPreviousHistory } from './clear-previous-history.js';\nimport appRouterCheck from './app-router-check.js';\n\nclass Router extends Framework7Class {\n  constructor(app, view) {\n    super({}, [typeof view === 'undefined' ? app : view]);\n    const router = this; // Is App Router\n\n    router.isAppRouter = typeof view === 'undefined';\n\n    if (router.isAppRouter) {\n      // App Router\n      extend(false, router, {\n        app,\n        params: app.params.view,\n        routes: app.routes || [],\n        cache: app.cache\n      });\n    } else {\n      // View Router\n      extend(false, router, {\n        app,\n        view,\n        viewId: view.id,\n        id: view.params.routerId,\n        params: view.params,\n        routes: view.routes,\n        history: view.history,\n        scrollHistory: view.scrollHistory,\n        cache: app.cache,\n        dynamicNavbar: app.theme === 'ios' && view.params.iosDynamicNavbar,\n        initialPages: [],\n        initialNavbars: []\n      });\n    } // Install Modules\n\n\n    router.useModules(); // AllowPageChage\n\n    router.allowPageChange = true; // Current Route\n\n    let currentRoute = {};\n    let previousRoute = {};\n    Object.defineProperty(router, 'currentRoute', {\n      enumerable: true,\n      configurable: true,\n\n      set(newRoute) {\n        if (newRoute === void 0) {\n          newRoute = {};\n        }\n\n        previousRoute = extend({}, currentRoute);\n        currentRoute = newRoute;\n        if (!currentRoute) return;\n        router.url = currentRoute.url;\n        router.emit('routeChange', newRoute, previousRoute, router);\n      },\n\n      get() {\n        return currentRoute;\n      }\n\n    });\n    Object.defineProperty(router, 'previousRoute', {\n      enumerable: true,\n      configurable: true,\n\n      get() {\n        return previousRoute;\n      },\n\n      set(newRoute) {\n        previousRoute = newRoute;\n      }\n\n    });\n    return router;\n  }\n\n  mount() {\n    const router = this;\n    const view = router.view;\n    const document = getDocument();\n    extend(false, router, {\n      tempDom: document.createElement('div'),\n      $el: view.$el,\n      el: view.el,\n      $navbarsEl: view.$navbarsEl,\n      navbarsEl: view.navbarsEl\n    });\n    router.emit('local::mount routerMount', router);\n  }\n\n  animatableNavElements($newNavbarEl, $oldNavbarEl, toLarge, fromLarge, direction) {\n    const router = this;\n    const dynamicNavbar = router.dynamicNavbar;\n    const animateIcon = router.params.iosAnimateNavbarBackIcon;\n    let newNavEls;\n    let oldNavEls;\n\n    function animatableNavEl($el, $navbarInner) {\n      const isSliding = $el.hasClass('sliding') || $navbarInner.hasClass('sliding');\n      const isSubnavbar = $el.hasClass('subnavbar');\n      const needsOpacityTransition = isSliding ? !isSubnavbar : true;\n      const $iconEl = $el.find('.back .icon');\n      let isIconLabel;\n\n      if (isSliding && animateIcon && $el.hasClass('left') && $iconEl.length > 0 && $iconEl.next('span').length) {\n        $el = $iconEl.next('span'); // eslint-disable-line\n\n        isIconLabel = true;\n      }\n\n      return {\n        $el,\n        isIconLabel,\n        leftOffset: $el[0].f7NavbarLeftOffset,\n        rightOffset: $el[0].f7NavbarRightOffset,\n        isSliding,\n        isSubnavbar,\n        needsOpacityTransition\n      };\n    }\n\n    if (dynamicNavbar) {\n      newNavEls = [];\n      oldNavEls = [];\n      $newNavbarEl.children('.navbar-inner').children('.left, .right, .title, .subnavbar').each(navEl => {\n        const $navEl = $(navEl);\n        if ($navEl.hasClass('left') && fromLarge && direction === 'forward') return;\n        if ($navEl.hasClass('title') && toLarge) return;\n        newNavEls.push(animatableNavEl($navEl, $newNavbarEl.children('.navbar-inner')));\n      });\n\n      if (!($oldNavbarEl.hasClass('navbar-master') && router.params.masterDetailBreakpoint > 0 && router.app.width >= router.params.masterDetailBreakpoint)) {\n        $oldNavbarEl.children('.navbar-inner').children('.left, .right, .title, .subnavbar').each(navEl => {\n          const $navEl = $(navEl);\n          if ($navEl.hasClass('left') && toLarge && !fromLarge && direction === 'forward') return;\n          if ($navEl.hasClass('left') && toLarge && direction === 'backward') return;\n\n          if ($navEl.hasClass('title') && fromLarge) {\n            return;\n          }\n\n          oldNavEls.push(animatableNavEl($navEl, $oldNavbarEl.children('.navbar-inner')));\n        });\n      }\n\n      [oldNavEls, newNavEls].forEach(navEls => {\n        navEls.forEach(navEl => {\n          const n = navEl;\n          const {\n            isSliding,\n            $el\n          } = navEl;\n          const otherEls = navEls === oldNavEls ? newNavEls : oldNavEls;\n          if (!(isSliding && $el.hasClass('title') && otherEls)) return;\n          otherEls.forEach(otherNavEl => {\n            if (otherNavEl.isIconLabel) {\n              const iconTextEl = otherNavEl.$el[0];\n              n.leftOffset += iconTextEl ? iconTextEl.offsetLeft || 0 : 0;\n            }\n          });\n        });\n      });\n    }\n\n    return {\n      newNavEls,\n      oldNavEls\n    };\n  }\n\n  animate($oldPageEl, $newPageEl, $oldNavbarEl, $newNavbarEl, direction, transition, callback) {\n    const router = this;\n\n    if (router.params.animateCustom) {\n      router.params.animateCustom.apply(router, [$oldPageEl, $newPageEl, $oldNavbarEl, $newNavbarEl, direction, callback]);\n      return;\n    }\n\n    const dynamicNavbar = router.dynamicNavbar;\n    const ios = router.app.theme === 'ios';\n\n    if (transition) {\n      const routerCustomTransitionClass = `router-transition-custom router-transition-${transition}-${direction}`; // Animate\n\n      const onCustomTransitionDone = () => {\n        router.$el.removeClass(routerCustomTransitionClass);\n\n        if (dynamicNavbar && router.$navbarsEl.length) {\n          if ($newNavbarEl) {\n            router.$navbarsEl.prepend($newNavbarEl);\n          }\n\n          if ($oldNavbarEl) {\n            router.$navbarsEl.prepend($oldNavbarEl);\n          }\n        }\n\n        if (callback) callback();\n      };\n\n      (direction === 'forward' ? $newPageEl : $oldPageEl).animationEnd(onCustomTransitionDone);\n\n      if (dynamicNavbar) {\n        if ($newNavbarEl && $newPageEl) {\n          router.setNavbarPosition($newNavbarEl, '');\n          $newNavbarEl.removeClass('navbar-next navbar-previous navbar-current');\n          $newPageEl.prepend($newNavbarEl);\n        }\n\n        if ($oldNavbarEl && $oldPageEl) {\n          router.setNavbarPosition($oldNavbarEl, '');\n          $oldNavbarEl.removeClass('navbar-next navbar-previous navbar-current');\n          $oldPageEl.prepend($oldNavbarEl);\n        }\n      }\n\n      router.$el.addClass(routerCustomTransitionClass);\n      return;\n    } // Router Animation class\n\n\n    const routerTransitionClass = `router-transition-${direction} router-transition`;\n    let newNavEls;\n    let oldNavEls;\n    let fromLarge;\n    let toLarge;\n    let toDifferent;\n    let oldIsLarge;\n    let newIsLarge;\n\n    if (ios && dynamicNavbar) {\n      const betweenMasterAndDetail = router.params.masterDetailBreakpoint > 0 && router.app.width >= router.params.masterDetailBreakpoint && ($oldNavbarEl.hasClass('navbar-master') && $newNavbarEl.hasClass('navbar-master-detail') || $oldNavbarEl.hasClass('navbar-master-detail') && $newNavbarEl.hasClass('navbar-master'));\n\n      if (!betweenMasterAndDetail) {\n        oldIsLarge = $oldNavbarEl && $oldNavbarEl.hasClass('navbar-large');\n        newIsLarge = $newNavbarEl && $newNavbarEl.hasClass('navbar-large');\n        fromLarge = oldIsLarge && !$oldNavbarEl.hasClass('navbar-large-collapsed');\n        toLarge = newIsLarge && !$newNavbarEl.hasClass('navbar-large-collapsed');\n        toDifferent = fromLarge && !toLarge || toLarge && !fromLarge;\n      }\n\n      const navEls = router.animatableNavElements($newNavbarEl, $oldNavbarEl, toLarge, fromLarge, direction);\n      newNavEls = navEls.newNavEls;\n      oldNavEls = navEls.oldNavEls;\n    }\n\n    function animateNavbars(progress) {\n      if (!(ios && dynamicNavbar)) return;\n\n      if (progress === 1) {\n        if (toLarge) {\n          $newNavbarEl.addClass('router-navbar-transition-to-large');\n          $oldNavbarEl.addClass('router-navbar-transition-to-large');\n        }\n\n        if (fromLarge) {\n          $newNavbarEl.addClass('router-navbar-transition-from-large');\n          $oldNavbarEl.addClass('router-navbar-transition-from-large');\n        }\n      }\n\n      newNavEls.forEach(navEl => {\n        const $el = navEl.$el;\n        const offset = direction === 'forward' ? navEl.rightOffset : navEl.leftOffset;\n\n        if (navEl.isSliding) {\n          if (navEl.isSubnavbar && newIsLarge) {\n            // prettier-ignore\n            $el[0].style.setProperty('transform', `translate3d(${offset * (1 - progress)}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`, 'important');\n          } else {\n            $el.transform(`translate3d(${offset * (1 - progress)}px,0,0)`);\n          }\n        }\n      });\n      oldNavEls.forEach(navEl => {\n        const $el = navEl.$el;\n        const offset = direction === 'forward' ? navEl.leftOffset : navEl.rightOffset;\n\n        if (navEl.isSliding) {\n          if (navEl.isSubnavbar && oldIsLarge) {\n            $el.transform(`translate3d(${offset * progress}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`);\n          } else {\n            $el.transform(`translate3d(${offset * progress}px,0,0)`);\n          }\n        }\n      });\n    } // AnimationEnd Callback\n\n\n    function onDone() {\n      if (router.dynamicNavbar) {\n        if ($newNavbarEl) {\n          $newNavbarEl.removeClass('router-navbar-transition-to-large router-navbar-transition-from-large');\n          $newNavbarEl.addClass('navbar-no-title-large-transition');\n          nextFrame(() => {\n            $newNavbarEl.removeClass('navbar-no-title-large-transition');\n          });\n        }\n\n        if ($oldNavbarEl) {\n          $oldNavbarEl.removeClass('router-navbar-transition-to-large router-navbar-transition-from-large');\n        }\n\n        if ($newNavbarEl.hasClass('sliding') || $newNavbarEl.children('.navbar-inner.sliding').length) {\n          $newNavbarEl.find('.title, .left, .right, .left .icon, .subnavbar').transform('');\n        } else {\n          $newNavbarEl.find('.sliding').transform('');\n        }\n\n        if ($oldNavbarEl.hasClass('sliding') || $oldNavbarEl.children('.navbar-inner.sliding').length) {\n          $oldNavbarEl.find('.title, .left, .right, .left .icon, .subnavbar').transform('');\n        } else {\n          $oldNavbarEl.find('.sliding').transform('');\n        }\n      }\n\n      router.$el.removeClass(routerTransitionClass);\n      if (callback) callback();\n    }\n\n    (direction === 'forward' ? $newPageEl : $oldPageEl).animationEnd(() => {\n      onDone();\n    }); // Animate\n\n    if (dynamicNavbar) {\n      // Prepare Navbars\n      animateNavbars(0);\n      nextFrame(() => {\n        // Add class, start animation\n        router.$el.addClass(routerTransitionClass);\n\n        if (toDifferent) {\n          // eslint-disable-next-line\n          router.el._clientLeft = router.el.clientLeft;\n        }\n\n        animateNavbars(1);\n      });\n    } else {\n      // Add class, start animation\n      router.$el.addClass(routerTransitionClass);\n    }\n  }\n\n  removeModal(modalEl) {\n    const router = this;\n    router.removeEl(modalEl);\n  } // eslint-disable-next-line\n\n\n  removeTabContent(tabEl) {\n    const $tabEl = $(tabEl);\n    $tabEl.html('');\n  }\n\n  removeNavbar(el) {\n    const router = this;\n    router.removeEl(el);\n  }\n\n  removePage(el) {\n    const $el = $(el);\n    const f7Page = $el && $el[0] && $el[0].f7Page;\n    const router = this;\n\n    if (f7Page && f7Page.route && f7Page.route.route && f7Page.route.route.keepAlive) {\n      $el.remove();\n      return;\n    }\n\n    router.removeEl(el);\n  }\n\n  removeEl(el) {\n    if (!el) return;\n    const router = this;\n    const $el = $(el);\n    if ($el.length === 0) return;\n    $el.find('.tab').each(tabEl => {\n      $(tabEl).children().each(tabChild => {\n        if (tabChild.f7Component) {\n          $(tabChild).trigger('tab:beforeremove');\n          tabChild.f7Component.destroy();\n        }\n      });\n    });\n\n    if ($el[0].f7Component && $el[0].f7Component.destroy) {\n      $el[0].f7Component.destroy();\n    }\n\n    if (!router.params.removeElements) {\n      return;\n    }\n\n    if (router.params.removeElementsWithTimeout) {\n      setTimeout(() => {\n        $el.remove();\n      }, router.params.removeElementsTimeout);\n    } else {\n      $el.remove();\n    }\n  }\n\n  getPageEl(content) {\n    const router = this;\n\n    if (typeof content === 'string') {\n      router.tempDom.innerHTML = content;\n    } else {\n      if ($(content).hasClass('page')) {\n        return content;\n      }\n\n      router.tempDom.innerHTML = '';\n      $(router.tempDom).append(content);\n    }\n\n    return router.findElement('.page', router.tempDom);\n  }\n\n  findElement(stringSelector, container, notStacked) {\n    const router = this;\n    const view = router.view;\n    const app = router.app; // Modals Selector\n\n    const modalsSelector = '.popup, .dialog, .popover, .actions-modal, .sheet-modal, .login-screen, .page';\n    const $container = $(container);\n    let selector = stringSelector;\n    if (notStacked) selector += ':not(.stacked)';\n    let found = $container.find(selector).filter(el => $(el).parents(modalsSelector).length === 0);\n\n    if (found.length > 1) {\n      if (typeof view.selector === 'string') {\n        // Search in related view\n        found = $container.find(`${view.selector} ${selector}`);\n      }\n\n      if (found.length > 1) {\n        // Search in main view\n        found = $container.find(`.${app.params.viewMainClass} ${selector}`);\n      }\n    }\n\n    if (found.length === 1) return found; // Try to find not stacked\n\n    if (!notStacked) found = router.findElement(selector, $container, true);\n    if (found && found.length === 1) return found;\n    if (found && found.length > 1) return $(found[0]);\n    return undefined;\n  }\n\n  flattenRoutes(routes) {\n    if (routes === void 0) {\n      routes = this.routes;\n    }\n\n    const router = this;\n    let flattenedRoutes = [];\n    routes.forEach(route => {\n      let hasTabRoutes = false;\n\n      if ('tabs' in route && route.tabs) {\n        const mergedPathsRoutes = route.tabs.map(tabRoute => {\n          const tRoute = extend({}, route, {\n            path: `${route.path}/${tabRoute.path}`.replace('///', '/').replace('//', '/'),\n            parentPath: route.path,\n            tab: tabRoute\n          });\n          delete tRoute.tabs;\n          delete tRoute.routes;\n          return tRoute;\n        });\n        hasTabRoutes = true;\n        flattenedRoutes = flattenedRoutes.concat(router.flattenRoutes(mergedPathsRoutes));\n      }\n\n      if ('detailRoutes' in route) {\n        const mergedPathsRoutes = route.detailRoutes.map(detailRoute => {\n          const dRoute = extend({}, detailRoute);\n          dRoute.masterRoute = route;\n          dRoute.masterRoutePath = route.path;\n          return dRoute;\n        });\n        flattenedRoutes = flattenedRoutes.concat(route, router.flattenRoutes(mergedPathsRoutes));\n      }\n\n      if ('routes' in route) {\n        const mergedPathsRoutes = route.routes.map(childRoute => {\n          const cRoute = extend({}, childRoute);\n          cRoute.path = `${route.path}/${cRoute.path}`.replace('///', '/').replace('//', '/');\n          return cRoute;\n        });\n\n        if (hasTabRoutes) {\n          flattenedRoutes = flattenedRoutes.concat(router.flattenRoutes(mergedPathsRoutes));\n        } else {\n          flattenedRoutes = flattenedRoutes.concat(route, router.flattenRoutes(mergedPathsRoutes));\n        }\n      }\n\n      if (!('routes' in route) && !('tabs' in route && route.tabs) && !('detailRoutes' in route)) {\n        flattenedRoutes.push(route);\n      }\n    });\n    return flattenedRoutes;\n  } // eslint-disable-next-line\n\n\n  parseRouteUrl(url) {\n    if (!url) return {};\n    const query = parseUrlQuery(url);\n    const hash = url.split('#')[1];\n    const params = {};\n    const path = url.split('#')[0].split('?')[0];\n    return {\n      query,\n      hash,\n      params,\n      url,\n      path\n    };\n  }\n\n  generateUrl(parameters) {\n    if (parameters === void 0) {\n      parameters = {};\n    }\n\n    if (typeof parameters === 'string') {\n      return parameters;\n    }\n\n    const {\n      name,\n      path,\n      params,\n      query\n    } = parameters;\n\n    if (!name && !path) {\n      throw new Error('Framework7: \"name\" or \"path\" parameter is required');\n    }\n\n    const router = this;\n    const route = name ? router.findRouteByKey('name', name) : router.findRouteByKey('path', path);\n\n    if (!route) {\n      if (name) {\n        throw new Error(`Framework7: route with name \"${name}\" not found`);\n      } else {\n        throw new Error(`Framework7: route with path \"${path}\" not found`);\n      }\n    }\n\n    const url = router.constructRouteUrl(route, {\n      params,\n      query\n    });\n\n    if (!url) {\n      throw new Error(`Framework7: can't construct URL for route with name \"${name}\"`);\n    }\n\n    return url;\n  } // eslint-disable-next-line\n\n\n  constructRouteUrl(route, _temp) {\n    let {\n      params,\n      query\n    } = _temp === void 0 ? {} : _temp;\n    const {\n      path\n    } = route;\n    const toUrl = compile(path);\n    let url;\n\n    try {\n      url = toUrl(params || {});\n    } catch (error) {\n      throw new Error(`Framework7: error constructing route URL from passed params:\\nRoute: ${path}\\n${error.toString()}`);\n    }\n\n    if (query) {\n      if (typeof query === 'string') url += `?${query}`;else if (Object.keys(query).length) url += `?${serializeObject(query)}`;\n    }\n\n    return url;\n  }\n\n  findTabRouteUrl(tabEl) {\n    const router = this;\n    const $tabEl = $(tabEl);\n    const parentPath = router.currentRoute.route.parentPath;\n    const tabId = $tabEl.attr('id');\n    const flattenedRoutes = router.flattenRoutes(router.routes);\n    let foundTabRouteUrl;\n    flattenedRoutes.forEach(route => {\n      if (route.parentPath === parentPath && route.tab && route.tab.id === tabId) {\n        if (router.currentRoute.params && Object.keys(router.currentRoute.params).length > 0) {\n          foundTabRouteUrl = router.constructRouteUrl(route, {\n            params: router.currentRoute.params,\n            query: router.currentRoute.query\n          });\n        } else {\n          foundTabRouteUrl = route.path;\n        }\n      }\n    });\n    return foundTabRouteUrl;\n  }\n\n  findRouteByKey(key, value) {\n    const router = this;\n    const routes = router.routes;\n    const flattenedRoutes = router.flattenRoutes(routes);\n    let matchingRoute;\n    flattenedRoutes.forEach(route => {\n      if (matchingRoute) return;\n\n      if (route[key] === value) {\n        matchingRoute = route;\n      }\n    });\n    return matchingRoute;\n  }\n\n  findMatchingRoute(url) {\n    if (!url) return undefined;\n    const router = this;\n    const routes = router.routes;\n    const flattenedRoutes = router.flattenRoutes(routes);\n    const {\n      path,\n      query,\n      hash,\n      params\n    } = router.parseRouteUrl(url);\n    let matchingRoute;\n    flattenedRoutes.forEach(route => {\n      if (matchingRoute) return;\n      const keys = [];\n      const pathsToMatch = [route.path];\n\n      if (route.alias) {\n        if (typeof route.alias === 'string') pathsToMatch.push(route.alias);else if (Array.isArray(route.alias)) {\n          route.alias.forEach(aliasPath => {\n            pathsToMatch.push(aliasPath);\n          });\n        }\n      }\n\n      let matched;\n      pathsToMatch.forEach(pathToMatch => {\n        if (matched) return;\n        matched = pathToRegexp(pathToMatch, keys).exec(path);\n      });\n\n      if (matched) {\n        keys.forEach((keyObj, index) => {\n          if (typeof keyObj.name === 'number') return;\n          const paramValue = matched[index + 1];\n\n          if (typeof paramValue === 'undefined' || paramValue === null) {\n            params[keyObj.name] = paramValue;\n          } else {\n            params[keyObj.name] = decodeURIComponent(paramValue);\n          }\n        });\n        let parentPath;\n\n        if (route.parentPath) {\n          parentPath = path.split('/').slice(0, route.parentPath.split('/').length - 1).join('/');\n        }\n\n        matchingRoute = {\n          query,\n          hash,\n          params,\n          url,\n          path,\n          parentPath,\n          route,\n          name: route.name\n        };\n      }\n    });\n    return matchingRoute;\n  } // eslint-disable-next-line\n\n\n  replaceRequestUrlParams(url, options) {\n    if (url === void 0) {\n      url = '';\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    let compiledUrl = url;\n\n    if (typeof compiledUrl === 'string' && compiledUrl.indexOf('{{') >= 0 && options && options.route && options.route.params && Object.keys(options.route.params).length) {\n      Object.keys(options.route.params).forEach(paramName => {\n        const regExp = new RegExp(`{{${paramName}}}`, 'g');\n        compiledUrl = compiledUrl.replace(regExp, options.route.params[paramName] || '');\n      });\n    }\n\n    return compiledUrl;\n  }\n\n  removeFromXhrCache(url) {\n    const router = this;\n    const xhrCache = router.cache.xhr;\n    let index = false;\n\n    for (let i = 0; i < xhrCache.length; i += 1) {\n      if (xhrCache[i].url === url) index = i;\n    }\n\n    if (index !== false) xhrCache.splice(index, 1);\n  }\n\n  xhrRequest(requestUrl, options) {\n    const router = this;\n    const params = router.params;\n    const {\n      ignoreCache\n    } = options;\n    let url = requestUrl;\n    let hasQuery = url.indexOf('?') >= 0;\n\n    if (params.passRouteQueryToRequest && options && options.route && options.route.query && Object.keys(options.route.query).length) {\n      url += `${hasQuery ? '&' : '?'}${serializeObject(options.route.query)}`;\n      hasQuery = true;\n    }\n\n    if (params.passRouteParamsToRequest && options && options.route && options.route.params && Object.keys(options.route.params).length) {\n      url += `${hasQuery ? '&' : '?'}${serializeObject(options.route.params)}`;\n      hasQuery = true;\n    }\n\n    if (url.indexOf('{{') >= 0) {\n      url = router.replaceRequestUrlParams(url, options);\n    } // should we ignore get params or not\n\n\n    if (params.xhrCacheIgnoreGetParameters && url.indexOf('?') >= 0) {\n      url = url.split('?')[0];\n    }\n\n    return new Promise((resolve, reject) => {\n      if (params.xhrCache && !ignoreCache && url.indexOf('nocache') < 0 && params.xhrCacheIgnore.indexOf(url) < 0) {\n        for (let i = 0; i < router.cache.xhr.length; i += 1) {\n          const cachedUrl = router.cache.xhr[i];\n\n          if (cachedUrl.url === url) {\n            // Check expiration\n            if (now() - cachedUrl.time < params.xhrCacheDuration) {\n              // Load from cache\n              resolve(cachedUrl.content);\n              return;\n            }\n          }\n        }\n      }\n\n      router.xhrAbortController = router.app.request.abortController();\n      router.app.request({\n        abortController: router.xhrAbortController,\n        url,\n        method: 'GET',\n\n        beforeSend(xhr) {\n          router.emit('routerAjaxStart', xhr, options);\n        },\n\n        complete(xhr, status) {\n          router.emit('routerAjaxComplete', xhr);\n\n          if (status !== 'error' && status !== 'timeout' && xhr.status >= 200 && xhr.status < 300 || xhr.status === 0) {\n            if (params.xhrCache && xhr.responseText !== '') {\n              router.removeFromXhrCache(url);\n              router.cache.xhr.push({\n                url,\n                time: now(),\n                content: xhr.responseText\n              });\n            }\n\n            router.emit('routerAjaxSuccess', xhr, options);\n            resolve(xhr.responseText);\n          } else {\n            router.emit('routerAjaxError', xhr, options);\n            reject(xhr);\n          }\n        },\n\n        error(xhr) {\n          router.emit('routerAjaxError', xhr, options);\n          reject(xhr);\n        }\n\n      });\n    });\n  }\n\n  setNavbarPosition($el, position, ariaHidden) {\n    const router = this;\n    $el.removeClass('navbar-previous navbar-current navbar-next');\n\n    if (position) {\n      $el.addClass(`navbar-${position}`);\n    }\n\n    if (ariaHidden === false) {\n      $el.removeAttr('aria-hidden');\n    } else if (ariaHidden === true) {\n      $el.attr('aria-hidden', 'true');\n    }\n\n    $el.trigger('navbar:position', {\n      position\n    });\n    router.emit('navbarPosition', $el[0], position);\n  }\n\n  setPagePosition($el, position, ariaHidden) {\n    const router = this;\n    $el.removeClass('page-previous page-current page-next');\n    $el.addClass(`page-${position}`);\n\n    if (ariaHidden === false) {\n      $el.removeAttr('aria-hidden');\n    } else if (ariaHidden === true) {\n      $el.attr('aria-hidden', 'true');\n    }\n\n    $el.trigger('page:position', {\n      position\n    });\n    router.emit('pagePosition', $el[0], position);\n  } // Remove theme elements\n\n\n  removeThemeElements(el) {\n    const router = this;\n    const theme = router.app.theme;\n    let toRemove;\n\n    if (theme === 'ios') {\n      toRemove = '.md-only, .aurora-only, .if-md, .if-aurora, .if-not-ios, .not-ios';\n    } else if (theme === 'md') {\n      toRemove = '.ios-only, .aurora-only, .if-ios, .if-aurora, .if-not-md, .not-md';\n    } else if (theme === 'aurora') {\n      toRemove = '.ios-only, .md-only, .if-ios, .if-md, .if-not-aurora, .not-aurora';\n    }\n\n    $(el).find(toRemove).remove();\n  }\n\n  getPageData(pageEl, navbarEl, from, to, route, pageFromEl) {\n    if (route === void 0) {\n      route = {};\n    }\n\n    const router = this;\n    const $pageEl = $(pageEl).eq(0);\n    const $navbarEl = $(navbarEl).eq(0);\n    const currentPage = $pageEl[0].f7Page || {};\n    let direction;\n    let pageFrom;\n    if (from === 'next' && to === 'current' || from === 'current' && to === 'previous') direction = 'forward';\n    if (from === 'current' && to === 'next' || from === 'previous' && to === 'current') direction = 'backward';\n\n    if (currentPage && !currentPage.fromPage) {\n      const $pageFromEl = $(pageFromEl);\n\n      if ($pageFromEl.length) {\n        pageFrom = $pageFromEl[0].f7Page;\n      }\n    }\n\n    pageFrom = currentPage.pageFrom || pageFrom;\n\n    if (pageFrom && pageFrom.pageFrom) {\n      pageFrom.pageFrom = null;\n    }\n\n    const page = {\n      app: router.app,\n      view: router.view,\n      router,\n      $el: $pageEl,\n      el: $pageEl[0],\n      $pageEl,\n      pageEl: $pageEl[0],\n      $navbarEl,\n      navbarEl: $navbarEl[0],\n      name: $pageEl.attr('data-name'),\n      position: from,\n      from,\n      to,\n      direction,\n      route: currentPage.route ? currentPage.route : route,\n      pageFrom\n    };\n    $pageEl[0].f7Page = page;\n    return page;\n  } // Callbacks\n\n\n  pageCallback(callback, pageEl, navbarEl, from, to, options, pageFromEl) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!pageEl) return;\n    const router = this;\n    const $pageEl = $(pageEl);\n    if (!$pageEl.length) return;\n    const $navbarEl = $(navbarEl);\n    const {\n      route\n    } = options;\n    const restoreScrollTopOnBack = router.params.restoreScrollTopOnBack && !(router.params.masterDetailBreakpoint > 0 && $pageEl.hasClass('page-master') && router.app.width >= router.params.masterDetailBreakpoint);\n    const keepAlive = $pageEl[0].f7Page && $pageEl[0].f7Page.route && $pageEl[0].f7Page.route.route && $pageEl[0].f7Page.route.route.keepAlive;\n\n    if (callback === 'beforeRemove' && keepAlive) {\n      callback = 'beforeUnmount'; // eslint-disable-line\n    }\n\n    const camelName = `page${callback[0].toUpperCase() + callback.slice(1, callback.length)}`;\n    const colonName = `page:${callback.toLowerCase()}`;\n    let page = {};\n\n    if (callback === 'beforeRemove' && $pageEl[0].f7Page) {\n      page = extend($pageEl[0].f7Page, {\n        from,\n        to,\n        position: from\n      });\n    } else {\n      page = router.getPageData($pageEl[0], $navbarEl[0], from, to, route, pageFromEl);\n    }\n\n    page.swipeBack = !!options.swipeBack;\n    const {\n      on = {},\n      once = {}\n    } = options.route ? options.route.route : {};\n\n    if (options.on) {\n      extend(on, options.on);\n    }\n\n    if (options.once) {\n      extend(once, options.once);\n    }\n\n    function attachEvents() {\n      if ($pageEl[0].f7RouteEventsAttached) return;\n      $pageEl[0].f7RouteEventsAttached = true;\n\n      if (on && Object.keys(on).length > 0) {\n        $pageEl[0].f7RouteEventsOn = on;\n        Object.keys(on).forEach(eventName => {\n          on[eventName] = on[eventName].bind(router);\n          $pageEl.on(eventNameToColonCase(eventName), on[eventName]);\n        });\n      }\n\n      if (once && Object.keys(once).length > 0) {\n        $pageEl[0].f7RouteEventsOnce = once;\n        Object.keys(once).forEach(eventName => {\n          once[eventName] = once[eventName].bind(router);\n          $pageEl.once(eventNameToColonCase(eventName), once[eventName]);\n        });\n      }\n    }\n\n    function detachEvents() {\n      if (!$pageEl[0].f7RouteEventsAttached) return;\n\n      if ($pageEl[0].f7RouteEventsOn) {\n        Object.keys($pageEl[0].f7RouteEventsOn).forEach(eventName => {\n          $pageEl.off(eventNameToColonCase(eventName), $pageEl[0].f7RouteEventsOn[eventName]);\n        });\n      }\n\n      if ($pageEl[0].f7RouteEventsOnce) {\n        Object.keys($pageEl[0].f7RouteEventsOnce).forEach(eventName => {\n          $pageEl.off(eventNameToColonCase(eventName), $pageEl[0].f7RouteEventsOnce[eventName]);\n        });\n      }\n\n      $pageEl[0].f7RouteEventsAttached = null;\n      $pageEl[0].f7RouteEventsOn = null;\n      $pageEl[0].f7RouteEventsOnce = null;\n      delete $pageEl[0].f7RouteEventsAttached;\n      delete $pageEl[0].f7RouteEventsOn;\n      delete $pageEl[0].f7RouteEventsOnce;\n    }\n\n    if (callback === 'mounted') {\n      attachEvents();\n    }\n\n    if (callback === 'init') {\n      if (restoreScrollTopOnBack && (from === 'previous' || !from) && to === 'current' && router.scrollHistory[page.route.url] && !$pageEl.hasClass('no-restore-scroll')) {\n        let $pageContent = $pageEl.find('.page-content');\n\n        if ($pageContent.length > 0) {\n          // eslint-disable-next-line\n          $pageContent = $pageContent.filter(pageContentEl => {\n            return $(pageContentEl).parents('.tab:not(.tab-active)').length === 0 && !$(pageContentEl).is('.tab:not(.tab-active)');\n          });\n        }\n\n        $pageContent.scrollTop(router.scrollHistory[page.route.url]);\n      }\n\n      attachEvents();\n\n      if ($pageEl[0].f7PageInitialized) {\n        $pageEl.trigger('page:reinit', page);\n        router.emit('pageReinit', page);\n        return;\n      }\n\n      $pageEl[0].f7PageInitialized = true;\n    }\n\n    if (restoreScrollTopOnBack && callback === 'beforeOut' && from === 'current' && to === 'previous') {\n      // Save scroll position\n      let $pageContent = $pageEl.find('.page-content');\n\n      if ($pageContent.length > 0) {\n        // eslint-disable-next-line\n        $pageContent = $pageContent.filter(pageContentEl => {\n          return $(pageContentEl).parents('.tab:not(.tab-active)').length === 0 && !$(pageContentEl).is('.tab:not(.tab-active)');\n        });\n      }\n\n      router.scrollHistory[page.route.url] = $pageContent.scrollTop();\n    }\n\n    if (restoreScrollTopOnBack && callback === 'beforeOut' && from === 'current' && to === 'next') {\n      // Delete scroll position\n      delete router.scrollHistory[page.route.url];\n    }\n\n    $pageEl.trigger(colonName, page);\n    router.emit(camelName, page);\n\n    if (callback === 'beforeRemove' || callback === 'beforeUnmount') {\n      detachEvents();\n\n      if (!keepAlive) {\n        if ($pageEl[0].f7Page && $pageEl[0].f7Page.navbarEl) {\n          delete $pageEl[0].f7Page.navbarEl.f7Page;\n        }\n\n        $pageEl[0].f7Page = null;\n      }\n    }\n  }\n\n  saveHistory() {\n    const router = this;\n    const window = getWindow();\n    router.view.history = router.history;\n\n    if (router.params.browserHistory && router.params.browserHistoryStoreHistory && window.localStorage) {\n      window.localStorage[`f7router-${router.view.id}-history`] = JSON.stringify(router.history);\n    }\n  }\n\n  restoreHistory() {\n    const router = this;\n    const window = getWindow();\n\n    if (router.params.browserHistory && router.params.browserHistoryStoreHistory && window.localStorage && window.localStorage[`f7router-${router.view.id}-history`]) {\n      router.history = JSON.parse(window.localStorage[`f7router-${router.view.id}-history`]);\n      router.view.history = router.history;\n    }\n  }\n\n  clearHistory() {\n    const router = this;\n    router.history = [];\n    if (router.view) router.view.history = [];\n    router.saveHistory();\n  }\n\n  updateCurrentUrl(newUrl) {\n    const router = this;\n    appRouterCheck(router, 'updateCurrentUrl'); // Update history\n\n    if (router.history.length) {\n      router.history[router.history.length - 1] = newUrl;\n    } else {\n      router.history.push(newUrl);\n    } // Update current route params\n\n\n    const {\n      query,\n      hash,\n      params,\n      url,\n      path\n    } = router.parseRouteUrl(newUrl);\n\n    if (router.currentRoute) {\n      extend(router.currentRoute, {\n        query,\n        hash,\n        params,\n        url,\n        path\n      });\n    }\n\n    if (router.params.browserHistory) {\n      const browserHistoryRoot = router.params.browserHistoryRoot || '';\n      History.replace(router.view.id, {\n        url: newUrl\n      }, browserHistoryRoot + router.params.browserHistorySeparator + newUrl);\n    } // Save History\n\n\n    router.saveHistory();\n    router.emit('routeUrlUpdate', router.currentRoute, router);\n  }\n\n  getInitialUrl() {\n    const router = this;\n\n    if (router.initialUrl) {\n      return {\n        initialUrl: router.initialUrl,\n        historyRestored: router.historyRestored\n      };\n    }\n\n    const {\n      app,\n      view\n    } = router;\n    const document = getDocument();\n    const window = getWindow();\n    const location = app.params.url && typeof app.params.url === 'string' && typeof URL !== 'undefined' ? new URL(app.params.url) : document.location;\n    let initialUrl = router.params.url;\n    let documentUrl = location.href.split(location.origin)[1];\n    let historyRestored;\n    const {\n      browserHistory,\n      browserHistoryOnLoad,\n      browserHistorySeparator\n    } = router.params;\n    let {\n      browserHistoryRoot\n    } = router.params;\n\n    if ((window.cordova || window.Capacitor && window.Capacitor.isNative) && browserHistory && !browserHistorySeparator && !browserHistoryRoot && location.pathname.indexOf('index.html')) {\n      // eslint-disable-next-line\n      console.warn('Framework7: wrong or not complete browserHistory configuration, trying to guess browserHistoryRoot');\n      browserHistoryRoot = location.pathname.split('index.html')[0];\n    }\n\n    if (!browserHistory || !browserHistoryOnLoad) {\n      if (!initialUrl) {\n        initialUrl = documentUrl;\n      }\n\n      if (location.search && initialUrl.indexOf('?') < 0) {\n        initialUrl += location.search;\n      }\n\n      if (location.hash && initialUrl.indexOf('#') < 0) {\n        initialUrl += location.hash;\n      }\n    } else {\n      if (browserHistoryRoot && documentUrl.indexOf(browserHistoryRoot) >= 0) {\n        documentUrl = documentUrl.split(browserHistoryRoot)[1];\n        if (documentUrl === '') documentUrl = '/';\n      }\n\n      if (browserHistorySeparator.length > 0 && documentUrl.indexOf(browserHistorySeparator) >= 0) {\n        initialUrl = documentUrl.split(browserHistorySeparator)[1];\n      } else {\n        initialUrl = documentUrl;\n      }\n\n      router.restoreHistory();\n\n      if (router.history.indexOf(initialUrl) >= 0) {\n        router.history = router.history.slice(0, router.history.indexOf(initialUrl) + 1);\n      } else if (router.params.url === initialUrl) {\n        router.history = [initialUrl];\n      } else if (History.state && History.state[view.id] && History.state[view.id].url === router.history[router.history.length - 1]) {\n        initialUrl = router.history[router.history.length - 1];\n      } else {\n        router.history = [documentUrl.split(browserHistorySeparator)[0] || '/', initialUrl];\n      }\n\n      if (router.history.length > 1) {\n        historyRestored = true;\n      } else {\n        router.history = [];\n      }\n\n      router.saveHistory();\n    }\n\n    router.initialUrl = initialUrl;\n    router.historyRestored = historyRestored;\n    return {\n      initialUrl,\n      historyRestored\n    };\n  }\n\n  init() {\n    const router = this;\n    const {\n      app,\n      view\n    } = router;\n    const document = getDocument();\n    router.mount();\n    const {\n      initialUrl,\n      historyRestored\n    } = router.getInitialUrl(); // Init Swipeback\n\n    if (view && router.params.iosSwipeBack && app.theme === 'ios' || view && router.params.mdSwipeBack && app.theme === 'md' || view && router.params.auroraSwipeBack && app.theme === 'aurora') {\n      SwipeBack(router);\n    }\n\n    const {\n      browserHistory,\n      browserHistoryOnLoad,\n      browserHistoryAnimateOnLoad,\n      browserHistoryInitialMatch\n    } = router.params;\n    let currentRoute;\n\n    if (router.history.length > 1) {\n      // Will load page\n      const initUrl = browserHistoryInitialMatch ? initialUrl : router.history[0];\n      currentRoute = router.findMatchingRoute(initUrl);\n\n      if (!currentRoute) {\n        currentRoute = extend(router.parseRouteUrl(initUrl), {\n          route: {\n            url: initUrl,\n            path: initUrl.split('?')[0]\n          }\n        });\n      }\n    } else {\n      // Don't load page\n      currentRoute = router.findMatchingRoute(initialUrl);\n\n      if (!currentRoute) {\n        currentRoute = extend(router.parseRouteUrl(initialUrl), {\n          route: {\n            url: initialUrl,\n            path: initialUrl.split('?')[0]\n          }\n        });\n      }\n    }\n\n    if (router.params.stackPages) {\n      router.$el.children('.page').each(pageEl => {\n        const $pageEl = $(pageEl);\n        router.initialPages.push($pageEl[0]);\n\n        if (router.dynamicNavbar && $pageEl.children('.navbar').length > 0) {\n          router.initialNavbars.push($pageEl.children('.navbar')[0]);\n        }\n      });\n    }\n\n    if (router.$el.children('.page:not(.stacked)').length === 0 && initialUrl && router.params.loadInitialPage) {\n      // No pages presented in DOM, reload new page\n      router.navigate(initialUrl, {\n        initial: true,\n        reloadCurrent: true,\n        browserHistory: false,\n        animate: false,\n        once: {\n          modalOpen() {\n            if (!historyRestored) return;\n            const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n            if (preloadPreviousPage && router.history.length > 1) {\n              router.back({\n                preload: true\n              });\n            }\n          },\n\n          pageAfterIn() {\n            if (!historyRestored) return;\n            const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n            if (preloadPreviousPage && router.history.length > 1) {\n              router.back({\n                preload: true\n              });\n            }\n          }\n\n        }\n      });\n    } else if (router.$el.children('.page:not(.stacked)').length) {\n      // Init current DOM page\n      let hasTabRoute;\n      router.currentRoute = currentRoute;\n      router.$el.children('.page:not(.stacked)').each(pageEl => {\n        const $pageEl = $(pageEl);\n        let $navbarEl;\n        router.setPagePosition($pageEl, 'current');\n\n        if (router.dynamicNavbar) {\n          $navbarEl = $pageEl.children('.navbar');\n\n          if ($navbarEl.length > 0) {\n            if (!router.$navbarsEl.parents(document).length) {\n              router.$el.prepend(router.$navbarsEl);\n            }\n\n            router.setNavbarPosition($navbarEl, 'current');\n            router.$navbarsEl.append($navbarEl);\n\n            if ($navbarEl.children('.title-large').length) {\n              $navbarEl.addClass('navbar-large');\n            }\n\n            $pageEl.children('.navbar').remove();\n          } else {\n            router.$navbarsEl.addClass('navbar-hidden');\n\n            if ($navbarEl.children('.title-large').length) {\n              router.$navbarsEl.addClass('navbar-hidden navbar-large-hidden');\n            }\n          }\n        }\n\n        if (router.currentRoute && router.currentRoute.route && (router.currentRoute.route.master === true || typeof router.currentRoute.route.master === 'function' && router.currentRoute.route.master(app, router)) && router.params.masterDetailBreakpoint > 0) {\n          $pageEl.addClass('page-master');\n          $pageEl.trigger('page:role', {\n            role: 'master'\n          });\n\n          if ($navbarEl && $navbarEl.length) {\n            $navbarEl.addClass('navbar-master');\n          }\n\n          view.checkMasterDetailBreakpoint();\n        }\n\n        const initOptions = {\n          route: router.currentRoute\n        };\n\n        if (router.currentRoute && router.currentRoute.route && router.currentRoute.route.options) {\n          extend(initOptions, router.currentRoute.route.options);\n        }\n\n        router.currentPageEl = $pageEl[0];\n\n        if (router.dynamicNavbar && $navbarEl.length) {\n          router.currentNavbarEl = $navbarEl[0];\n        }\n\n        router.removeThemeElements($pageEl);\n\n        if (router.dynamicNavbar && $navbarEl.length) {\n          router.removeThemeElements($navbarEl);\n        }\n\n        if (initOptions.route.route.tab) {\n          hasTabRoute = true;\n          router.tabLoad(initOptions.route.route.tab, extend({}, initOptions));\n        }\n\n        router.pageCallback('init', $pageEl, $navbarEl, 'current', undefined, initOptions);\n        router.pageCallback('beforeIn', $pageEl, $navbarEl, 'current', undefined, initOptions);\n        router.pageCallback('afterIn', $pageEl, $navbarEl, 'current', undefined, initOptions);\n      });\n\n      if (historyRestored) {\n        if (browserHistoryInitialMatch) {\n          const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n          if (preloadPreviousPage && router.history.length > 1) {\n            router.back({\n              preload: true\n            });\n          }\n        } else {\n          router.navigate(initialUrl, {\n            initial: true,\n            browserHistory: false,\n            history: false,\n            animate: browserHistoryAnimateOnLoad,\n            once: {\n              pageAfterIn() {\n                const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n                if (preloadPreviousPage && router.history.length > 2) {\n                  router.back({\n                    preload: true\n                  });\n                }\n              }\n\n            }\n          });\n        }\n      }\n\n      if (!historyRestored && !hasTabRoute) {\n        router.history.push(initialUrl);\n        router.saveHistory();\n      }\n    }\n\n    if (initialUrl && browserHistory && browserHistoryOnLoad && (!History.state || !History.state[view.id])) {\n      History.initViewState(view.id, {\n        url: initialUrl\n      });\n    }\n\n    router.emit('local::init routerInit', router);\n  }\n\n  destroy() {\n    let router = this;\n    router.emit('local::destroy routerDestroy', router); // Delete props & methods\n\n    Object.keys(router).forEach(routerProp => {\n      router[routerProp] = null;\n      delete router[routerProp];\n    });\n    router = null;\n  }\n\n} // Load\n\n\nRouter.prototype.navigate = navigate;\nRouter.prototype.refreshPage = refreshPage; // Tab\n\nRouter.prototype.tabLoad = tabLoad;\nRouter.prototype.tabRemove = tabRemove; // Modal\n\nRouter.prototype.modalLoad = modalLoad;\nRouter.prototype.modalRemove = modalRemove; // Back\n\nRouter.prototype.back = back; // Clear history\n\nRouter.prototype.clearPreviousHistory = clearPreviousHistory;\nexport default Router;"],"mappings":"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"},"metadata":{},"sourceType":"module"}